class(focal.dbh)
class(focal.dbh$log.cBA)
# looking at data summaries, species at each site across gradient
#levels(focal.dbh$Site) <- c(3, 1, 4, 2)
#focal.dbh$Site <- factor(as.numeric(focal.dbh$Site), levels = c("HF", "WM", "GR", "SH"))
coralt <- focal.dbh[focal.dbh$sp == "CORALT",]
hamvir <- focal.dbh[focal.dbh$sp == "HAMVIR",]
sorame <- focal.dbh[focal.dbh$sp == "SORAME",]
acepen <- focal.dbh[focal.dbh$sp == "ACEPEN",]
focal.small <- rbind(coralt, sorame, hamvir, acepen)
#focal.medium <- rbind(hamvir, acepen)
betpap <- focal.dbh[focal.dbh$sp == "BETPAP",]
faggra <- focal.dbh[focal.dbh$sp == "FAGGRA",]
quealb <- focal.dbh[focal.dbh$sp == "QUEALB",]
focal.large <- rbind(betpap, faggra, quealb)
ggplot(focal.small,
aes(as.numeric(Site), log.cBA, color = sp)) +
#geom_smooth( se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
facet_wrap(~sp, ncol = 2) +
ylab("Fraction of total Basal Area")
ggplot(focal.dbh,
aes(as.numeric(Site), as.numeric(log.cBA), color = sp)) +
geom_point() + xlab("Site") +
facet_wrap(~sp, ncol=4)
ggplot(focal.small,
aes(as.numeric(Site), log.cBA, color = sp)) +
#geom_smooth( se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
#scale_x_continuous(labels =
#c("HF","WM","GR","SH")) +
facet_wrap(~sp, ncol = 2) +
ylab("Fraction of total Basal Area")
focal.dbh$competing.BA <- as.character(focal.dbh$competing.BA)
focal.dbh$Individual <- as.character(focal.dbh$Individual)
focal.dbh$Site <- unlist(
lapply(strsplit(focal.dbh[,1], "_"),
function(x) x[[2]]))
focal.dbh$sp <- substr(focal.dbh$Individual, 1, 6)
class(focal.dbh$Site)
class(focal.dbh)
class(focal.dbh$log.cBA)
# looking at data summaries, species at each site across gradient
#levels(focal.dbh$Site) <- c(3, 1, 4, 2)
#focal.dbh$Site <- factor(as.numeric(focal.dbh$Site), levels = c("HF", "WM", "GR", "SH"))
coralt <- focal.dbh[focal.dbh$sp == "CORALT",]
hamvir <- focal.dbh[focal.dbh$sp == "HAMVIR",]
sorame <- focal.dbh[focal.dbh$sp == "SORAME",]
acepen <- focal.dbh[focal.dbh$sp == "ACEPEN",]
focal.small <- rbind(coralt, sorame, hamvir, acepen)
#focal.medium <- rbind(hamvir, acepen)
betpap <- focal.dbh[focal.dbh$sp == "BETPAP",]
faggra <- focal.dbh[focal.dbh$sp == "FAGGRA",]
quealb <- focal.dbh[focal.dbh$sp == "QUEALB",]
focal.large <- rbind(betpap, faggra, quealb)
ggplot(focal.small,
aes(as.numeric(Site), log.cBA, color = sp)) +
#geom_smooth( se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
facet_wrap(~sp, ncol = 2) +
ylab("Fraction of total Basal Area")
ggplot(focal.dbh,
aes(as.numeric(Site), as.numeric(competing.BA), color = sp)) +
geom_point() + xlab("Site") +
facet_wrap(~sp, ncol=4)
focal.dbh$log.cBA <- as.factor(as.character(focal.dbh$log.cBA))
focal.dbh$competing.BA <- as.factor(as.character(focal.dbh$competing.BA))
focal.dbh$Individual <- as.character(focal.dbh$Individual)
focal.dbh$Site <- unlist(
lapply(strsplit(focal.dbh[,1], "_"),
function(x) x[[2]]))
focal.dbh$sp <- substr(focal.dbh$Individual, 1, 6)
class(focal.dbh$Site)
class(focal.dbh)
class(focal.dbh$log.cBA)
# looking at data summaries, species at each site across gradient
#levels(focal.dbh$Site) <- c(3, 1, 4, 2)
#focal.dbh$Site <- factor(as.numeric(focal.dbh$Site), levels = c("HF", "WM", "GR", "SH"))
coralt <- focal.dbh[focal.dbh$sp == "CORALT",]
hamvir <- focal.dbh[focal.dbh$sp == "HAMVIR",]
sorame <- focal.dbh[focal.dbh$sp == "SORAME",]
acepen <- focal.dbh[focal.dbh$sp == "ACEPEN",]
focal.small <- rbind(coralt, sorame, hamvir, acepen)
#focal.medium <- rbind(hamvir, acepen)
betpap <- focal.dbh[focal.dbh$sp == "BETPAP",]
faggra <- focal.dbh[focal.dbh$sp == "FAGGRA",]
quealb <- focal.dbh[focal.dbh$sp == "QUEALB",]
focal.large <- rbind(betpap, faggra, quealb)
# grah shows numbers (possibly due to infinite log values?)
ggplot(focal.small,
aes(as.numeric(Site), log.cBA, color = sp)) +
#geom_smooth( se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
facet_wrap(~sp, ncol = 2) +
ylab("Fraction of total Basal Area")
# no points appear on this graph
ggplot(focal.dbh,
aes(as.numeric(Site), as.numeric(competing.BA), color = sp)) +
geom_point() + xlab("Site") +
facet_wrap(~sp, ncol=4)
focal.dbh$log.cBA <- as.numeric(as.factor(as.character(focal.dbh$log.cBA)))
focal.dbh$log.cBA <- as.numeric(as.factor(as.character(focal.dbh$log.cBA)))
focal.dbh$competing.BA <- as.numeric(as.factor(as.character(focal.dbh$competing.BA)))
class(focal.dbh$log.cBA)
# Site and species information based on last 2 letters of individuals
focal.dbh$Individual <- as.character(focal.dbh$Individual)
focal.dbh$Site <- unlist(
lapply(strsplit(focal.dbh[,1], "_"),
function(x) x[[2]]))
focal.dbh$sp <- substr(focal.dbh$Individual, 1, 6)
class(focal.dbh$Site)
class(focal.dbh)
class(focal.dbh$log.cBA)
# looking at data summaries, species at each site across gradient
#levels(focal.dbh$Site) <- c(3, 1, 4, 2)
#focal.dbh$Site <- factor(as.numeric(focal.dbh$Site), levels = c("HF", "WM", "GR", "SH"))
coralt <- focal.dbh[focal.dbh$sp == "CORALT",]
hamvir <- focal.dbh[focal.dbh$sp == "HAMVIR",]
sorame <- focal.dbh[focal.dbh$sp == "SORAME",]
acepen <- focal.dbh[focal.dbh$sp == "ACEPEN",]
focal.small <- rbind(coralt, sorame, hamvir, acepen)
#focal.medium <- rbind(hamvir, acepen)
betpap <- focal.dbh[focal.dbh$sp == "BETPAP",]
faggra <- focal.dbh[focal.dbh$sp == "FAGGRA",]
quealb <- focal.dbh[focal.dbh$sp == "QUEALB",]
focal.large <- rbind(betpap, faggra, quealb)
# grah shows numbers (possibly due to infinite log values?)
ggplot(focal.small,
aes(as.numeric(Site), log.cBA, color = sp)) +
#geom_smooth( se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
facet_wrap(~sp, ncol = 2) +
ylab("Fraction of total Basal Area")
# no points appear on this graph
ggplot(focal.dbh,
aes(as.numeric(Site), as.numeric(competing.BA), color = sp)) +
geom_point() + xlab("Site") +
facet_wrap(~sp, ncol=4)
ggplot(focal.dbh,
aes(as.numeric(Site), log.cBA, color = sp)) +
geom_point() + xlab("Site") +
facet_wrap(~sp, ncol=4)
library(vegan)
library(ggplot2)
library(lme4)
library(dplyr)
library(tidyr)
rm(list = ls())
setwd("~/Dropbox/Summer 2016 Forest/Data")
d <- read.csv("Trees.DBH.test.csv", row.names = NULL)
d <- d[,1:3]
#d <- d2[,-2]
# put data into correct format
overstory <- distinct(d)
overstory <- rename(overstory, Species = Comp.Species)
d2 <- melt(overstory, id = "Individual", measure.vars = "Species" )
over.all <- as.data.frame(acast(d2, Individual ~ value, length))
head(over.all)
over.all <- t(over.all)
d2 <- melt(overstory, id = "Individual", measure.vars = "Species" )
over.all <- as.data.frame(acast(d2, Individual ~ value, length))
?acast
??acast
library(reshape)
over.all <- as.data.frame(acast(d2, Individual ~ value, length))
library(reshape2)
rm(list = ls())
setwd("~/Dropbox/Summer 2016 Forest/Data")
d <- read.csv("Trees.DBH.test.csv", row.names = NULL)
d <- d[,1:3]
#d <- d2[,-2]
# put data into correct format
overstory <- distinct(d)
overstory <- rename(overstory, Species = Comp.Species)
d2 <- melt(overstory, id = "Individual", measure.vars = "Species" )
over.all <- as.data.frame(acast(d2, Individual ~ value, length))
head(over.all)
over.all <- t(over.all)
head(over.all)
summary(over.all)
# Analysis and summarizing richness of the overstory
richness <- apply(over.all, 2, sum)
mds1 <- metaMDS(t(over.all), try = 100) # use t() to change it so that the communities are rows, and species are columns, which is the format that vegan uses
plot(mds1) # ok, lots of scatter, good ordination
overcomp <- data.frame(mds1$points)
overcomp$s <- richness # add our species richness calculations to this data frame
overcomp$sp <- substr(rownames(overcomp), 1, 6)
# Get the site by getting the last two characters of the overcomp rownames
overcomp$site <- unlist(
lapply(strsplit(rownames(overcomp), "_"),
function(x) x[[2]]))
# For each species, plot the species richness by site. Order sites by south -> north
overcomp$site <- as.factor(overcomp$site)
levels(overcomp$site) <- c(3, 1, 4, 2)
overcomp$site <- factor(as.numeric(as.character(overcomp$site)), labels = c("HF", "WM", "GR", "SH"))
###### Plotting
ggplot(overcomp,
aes(as.numeric(site), s, color = sp)) +
geom_smooth(method = "lm", se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
scale_x_continuous(labels =
c("HF","WM","GR","SH")) +
facet_wrap(~sp, ncol = 4)
class(overcomp$s)
focal.dbh$log.cBA <- as.integer(as.factor(as.character(focal.dbh$log.cBA)))
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
focal.dbh["competing.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
focal.dbh["log.cBA"] <- log(focal.dbh$competing.BA)
focal.dbh$log.cBA <- as.integer(as.factor(as.character(focal.dbh$log.cBA)))
focal.dbh$competing.BA <- as.integer(as.factor(as.character(focal.dbh$competing.BA)))
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
# filter  data so only individiuals with DBHs greater than the focal DBH exist
library(dplyr)
compet <- filter(all.dbh, DBH > fDBH)
# create basal area variables of only those individuals
compet["BA"] <- .5*pi*(compet$DBH)^2
compet["fBA"] <- .5*pi*(compet$fDBH)^2
# sum the basal area for each individual
focal.dbh["competing.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
focal.dbh["log.cBA"] <- log(focal.dbh$competing.BA)
focal.dbh$log.cBA <- as.integer(as.factor(as.character(focal.dbh$log.cBA)))
focal.dbh$competing.BA <- as.integer(as.factor(as.character(focal.dbh$competing.BA)))
class(focal.dbh$log.cBA)
focal.dbh$Individual <- as.character(focal.dbh$Individual)
focal.dbh$Site <- unlist(
lapply(strsplit(focal.dbh[,1], "_"),
function(x) x[[2]]))
focal.dbh$sp <- substr(focal.dbh$Individual, 1, 6)
class(focal.dbh$Site)
class(focal.dbh)
class(focal.dbh$log.cBA)
# looking at data summaries, species at each site across gradient
#levels(focal.dbh$Site) <- c(3, 1, 4, 2)
#focal.dbh$Site <- factor(as.numeric(focal.dbh$Site), levels = c("HF", "WM", "GR", "SH"))
coralt <- focal.dbh[focal.dbh$sp == "CORALT",]
hamvir <- focal.dbh[focal.dbh$sp == "HAMVIR",]
sorame <- focal.dbh[focal.dbh$sp == "SORAME",]
acepen <- focal.dbh[focal.dbh$sp == "ACEPEN",]
focal.small <- rbind(coralt, sorame, hamvir, acepen)
#focal.medium <- rbind(hamvir, acepen)
betpap <- focal.dbh[focal.dbh$sp == "BETPAP",]
faggra <- focal.dbh[focal.dbh$sp == "FAGGRA",]
quealb <- focal.dbh[focal.dbh$sp == "QUEALB",]
focal.large <- rbind(betpap, faggra, quealb)
# grah shows numbers (possibly due to infinite log values?)
ggplot(focal.small,
aes(as.numeric(Site), log.cBA, color = sp)) +
#geom_smooth( se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
facet_wrap(~sp, ncol = 2) +
ylab("Fraction of total Basal Area")
class(focal.small$log.cBA)
ggplot(focal.small,
aes(as.numeric(Site), log.cBA, color = sp)) +
geom_smooth(method = "lm", se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
scale_x_continuous(labels =
c("HF","WM","GR","SH")) +
facet_wrap(~sp, ncol = 4)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
View(focal.dbh)
lat.long <- read.csv("DBH.Lat.Long.csv")
View(lat.long)
View(focal.dbh)
View(lat.long)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal.dbh, c("DBH" = "fDBH"))
View(focal)
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by = "Individual")
View(focal)
focal <- rename(focal, c("DBH" = "fDBH"))
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by.x = "Individual", "Height")
focal <- merge(lat.long, focal, by.x = "Individual")
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by = "Individual")
focal <- focal[,-3]
focal <- focal[, -5:11]
focal <- focal[, -5:-11]
focal <- focal[, -5:-11]
head(focal.dbh)
head(focal)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by = "Individual")
focal <- focal[,-3]
focal <- focal[, -5:-11]
head(focal)
focal <- rename(focal, c("Height.y" = "Height"))
head(focal)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh, by = "Individual")
all.dbh <- merge(focal, other.dbh, by = "Individual")
head(all.dbh)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by = "Individual")
focal <- focal[,-2:-3]
focal <- focal[, -4:-10]
focal <- rename(focal, c("Height.y" = "Height"))
head(focal)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal, other.dbh, by = "Individual")
head(all.dbh)
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
# filter  data so only individiuals with DBHs greater than the focal DBH exist
library(dplyr)
compet <- filter(all.dbh, DBH > fDBH)
# create basal area variables of only those individuals
compet["BA"] <- .5*pi*(compet$DBH)^2
compet["fBA"] <- .5*pi*(compet$fDBH)^2
# sum the basal area for each individual
focal.dbh["competing.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
focal.dbh["log.cBA"] <- log(focal.dbh$competing.BA)
focal.dbh$log.cBA <- as.integer(as.factor(as.character(focal.dbh$log.cBA)))
focal["competing.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
focal["log.cBA"] <- log(focal$competing.BA)
focal$log.cBA <- as.integer(as.factor(as.character(focal$log.cBA)))
focal$competing.BA <- as.integer(as.factor(as.character(focal$competing.BA)))
class(focal$log.cBA)
focal.dbh$Individual <- as.character(focal$Individual)
focal$Individual <- as.character(focal$Individual)
focal$Site <- unlist(
lapply(strsplit(focal[,1], "_"),
function(x) x[[2]]))
focal$sp <- substr(focal$Individual, 1, 6)
class(focal$Site)
class(focal)
class(focal$log.cBA)
coralt <- focal[focal$sp == "CORALT",]
hamvir <- focal[focal$sp == "HAMVIR",]
sorame <- focal[focal$sp == "SORAME",]
acepen <- focal[focal$sp == "ACEPEN",]
focal.small <- rbind(coralt, sorame, hamvir, acepen)
#focal.medium <- rbind(hamvir, acepen)
betpap <- focal[focal$sp == "BETPAP",]
faggra <- focal[focal$sp == "FAGGRA",]
quealb <- focal[focal$sp == "QUEALB",]
focal.large <- rbind(betpap, faggra, quealb)
# grah shows numbers (possibly due to infinite log values?)
View(focal.large)
ggplot(focal,
aes(Lat, competing.BA, color = sp)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~sp, ncol = 4)
ggplot(focal,
aes(Lat, log.cBA, color = sp)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~sp, ncol = 4)
summary(lm1 <- lm(competing.BA ~ as.numeric(Site), data = focal[focal$sp == "ACEPEN",]))
summary(lm1 <- lm(log.cBA ~ as.numeric(Site), data = focal[focal$sp == "ACEPEN",]))
lme1 <- lmer(competing.BA ~ as.numeric(Site) + (as.numeric(Site) | sp), data = focal)
summary(lm1 <- lm(log.cBA ~ Lat, data = focal[focal$sp == "ACEPEN",]))
summary(lm2 <- lm(log.cBA ~ Lat, data = focal[focal$sp == "BETPAP",]))
summary(lm1 <- lm(log.cBA ~ Lat, data = focal[focal$sp == "CORALT",]))
summary(lm1 <- lm(log.cBA ~ Lat, data = focal[focal$sp == "FAGGRA",]))
summary(lm1 <- lm(log.cBA ~ Lat, data = focal[focal$sp == "HAMVIR",]))
summary(lm1 <- lm(log.cBA ~ Lat, data = focal[focal$sp == "QUEALB",]))
summary(lm7 <- lm(log.cBA ~ Lat, data = focal[focal$sp == "SORAME",]))
# Mixed effect model to use all species in single analysis
lme1 <- lmer(competing.BA ~ Lat + (Lat | sp), data = focal)
lme1 <- lmer(log.cBA ~ Lat + (Lat | sp), data = focal)
lme1 <- lmer(competing.BA ~ Lat + (Lat | sp), data = focal)
fixef(lme1)
ranef(lme1)
summary(lme1)
ranef <- ranef(lme1)

source("Fig2-source.R")
View(focal.centroid)
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
library(sjPlot) # install.packages("sjPlot")
centroid <- read.csv("centroid_data.csv")
centroid$sp = c("ACEPEN", "BETPAP", "CORALT", "FAGGRA", "HAMVIR", "SORAME")
centroid <- subset(centroid, select = c("sp","minLat", "maxLat", "midLat", "minTemp", "maxTemp", "midTemp",
"minPrec", "maxPrec", "midPrec"))
focal <- read.csv("focal.species.dbh.csv")
focal$Height <- NULL
focal$DBH <- NULL
lat.long <- read.csv("DBH.Lat.Long.csv")
lat.long <- subset(lat.long, select = c("Individual", "DBH", "Height", "Lat", "Long"))
focal <- merge(lat.long, focal, by = "Individual")
focal$DBH[focal$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
focal$DBH[focal$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
focal$DBH[focal$DBH == "less.than.2"] = 1 # make all <2 measures into 1
other.dbh <- read.csv("all.species.dbh.csv")
# merge datasets -- NAs appearing in CORALTs so check this
#setdiff(unique(other.dbh$Individual), unique(focal$Individual))
all.dbh <- merge(focal, other.dbh, by = "Individual", all.x = TRUE, all.y = TRUE, suffixes = c(".focal", ".other"))
#index
#all.dbh[which(is.na(all.dbh$DBH.focal) == TRUE), ]
# Clean up DBH measures
all.dbh$DBH.other <- as.character(all.dbh$DBH.other) # convert from factor to character
all.dbh$DBH.focal <- as.character(all.dbh$DBH.focal)
all.dbh$DBH.other[all.dbh$DBH.other == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH.focal[all.dbh$DBH.focal == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH.other[all.dbh$DBH.other == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH.other <- as.numeric(as.character(all.dbh$DBH.other))
all.dbh$DBH.focal <- as.numeric(as.character(all.dbh$DBH.focal))# convert from factor to numeric
#summary(all.dbh$DBH.other) # should not be any NA
# say whether focal DBH is smaller than competing individual
all.dbh["greater"] <- all.dbh$DBH.focal < all.dbh$DBH.other
#View(all.dbh)
# filter  data so only individiuals with DBHs greater than the focal DBH exist
compet <- all.dbh[which(all.dbh$DBH.other > all.dbh$DBH.focal),]
#dim(all.dbh[which(all.dbh$greater == TRUE) ,])
# separate out same species to measure intra-specific competition
compet$sp = substr(compet$Individual, 1, 6)
compet$intra.sp <- compet$Comp.Species == compet$sp
#head(compet)
intra.compet <- compet[which(compet$intra.sp == TRUE & compet$DBH.focal < compet$DBH.other),]
intra.compet$BA = .5*pi*(intra.compet$DBH.other)^2
intra.compet$fBA = .5*pi*(intra.compet$DBH.focal)^2
intra.comp.BA <- data.frame(tapply(intra.compet$BA, intra.compet$Individual, sum))
# create basal area variables of only those individuals
compet$BA = .5*pi*(compet$DBH.other)^2
compet$fBA = .5*pi*(compet$DBH.focal)^2
# sum the basal area for each individual
# This is very problematic... made a 'numeric' data frame composed of just the level values
# focal["competing.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
# This is what you wanted to do
# focal <- data.frame(focal, competing.BA = tapply(compet$BA, compet$Individual, sum))
sum.BA <- tapply(compet$BA, compet$Individual, sum)
sum.BA.df <- data.frame(Individual = names(sum.BA), sum.BA = sum.BA)
focal.ba <- merge(focal, sum.BA.df, by = "Individual", all.y = TRUE, all.x = TRUE)
focal.ba$DBH = as.numeric(as.character(focal.ba$DBH))
focal.ba$BA = .5*pi*(focal.ba$DBH)^2
focal.ba$log.cBA = log(focal.ba$sum.BA) # what are NAs from? Some have no competing BA values apparently
focal.ba$relative.BA = focal.ba$BA / focal.ba$sum.BA
# create new species variable
focal.ba$sp = substr(focal.ba$Individual, 1, 6)
# merge focal.ba with centroid data
View(focal.ba)
focal.centroid <- merge(focal.ba, centroid, by = "sp", all.x = TRUE, all.y = TRUE)
View(focal.centroid)
focal.centroid$minLatdiff = focal.centroid$Lat - focal.centroid$minLat
focal.centroid$centroiddiff = focal.centroid$Lat - focal.centroid$midLat
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/input")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/analyses/input")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
library(sjPlot) # install.packages("sjPlot")
source("Fig2-source.R")
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
library(sjPlot) # install.packages("sjPlot")
source("Fig2-source.R")
View(focal.centroid)
ggplot(focal.centroid,
aes(minLatdiff, relative.BA, color = sp)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~sp, ncol = 3, scales = "free") +
xlab("Distance from Min. Latitude") +
ylab("Relative Basal Area")
ggplot(focal.centroid,
aes(minLatdiff, relative.BA, color = sp)) +
geom_point() +
geom_abline(0.129447941, -0.006064695, col="black", lwd=3) +
facet_wrap(~sp, ncol = 3, scales = "free") +
xlab("Distance from Min. Latitude") +
ylab("Relative Basal Area")
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "QUEALB"),]
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "FAGGRA" & focal.centroid$sum.BA > 20000),]
focal.centroid[which(focal.centroid$sp == "HAMVIR" & focal.centroid$relative.BA > 10),]
lme1 <- lmer(relative.BA ~ minLatdiff + (minLatdiff | sp), data = focal.centroid)
fixef(lme1)
ranef(lme1)
summary(lme1)
ranef <- ranef(lme1)
ranef.df <- c("ACEPEN", -0.107918109,  0.0065249743,
"BETPAP",  0.381783875, -0.0230835213,
"CORALT", -0.126421505,  0.0076437317,
"FAGGRA", -0.017713339,  0.0010709888,
"HAMVIR",  0.005347238, -0.0003233062,
"SORAME", -0.135078160,  0.0081671327)
sjt.lmer(lme1)
myspecieslist <- unique(focal.centroid$sp)
mycolors <- rep(c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#386CB0", "#F0027F"), 10) # need 6 really!
plot(focal.centroid$minLatdiff,focal.centroid$relative.BA, type="n")
for (i in c(1:length(myspecieslist))){
subby <- subset(focal.centroid, sp==myspecieslist[i])
points(subby$minLatdiff, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.129447941, -0.006064695, col="black", lwd=3) # overall mean
abline(-0.107918109, 0.0065249743, col="#7FC97F", lwd=1)
abline(0.381783875, -0.0230835213, col="#BEAED4", lwd=1)
abline(-0.126421505,  0.0076437317, col="#FDC086", lwd=1)
abline(-0.017713339,  0.0010709888, col="#FFFF99", lwd=1)
abline(0.005347238, -0.0003233062, col="#386CB0", lwd=1)
abline(-0.135078160,  0.0081671327, col="#F0027F", lwd=1)
mycolors <- rep(c("#7FC97F", "#BEAED4", "#E7298A", "#1B9E77", "#D95F02", "#7570B3"), 10) # need 6 really!
plot(focal.centroid$minLatdiff,focal.centroid$relative.BA, type="n")
for (i in c(1:length(myspecieslist))){
subby <- subset(focal.centroid, sp==myspecieslist[i])
points(subby$minLatdiff, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.129447941, -0.006064695, col="black", lwd=3) # overall mean
abline(-0.107918109, 0.0065249743, col="#7FC97F", lwd=1)
abline(0.381783875, -0.0230835213, col="#BEAED4", lwd=1)
abline(-0.126421505,  0.0076437317, col="#FDC086", lwd=1)
abline(-0.017713339,  0.0010709888, col="#FFFF99", lwd=1)
mycolors <- rep(c("#7FC97F", "#BEAED4", "#E7298A", "#1B9E77", "#D95F02", "#7570B3"), 10) # need 6 really!
plot(focal.centroid$minLatdiff,focal.centroid$relative.BA, type="n")
for (i in c(1:length(myspecieslist))){
subby <- subset(focal.centroid, sp==myspecieslist[i])
points(subby$minLatdiff, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
source("Fig2-source.R")
clim <- read.csv("climatic_data.csv")
clim <- subset(clim, select = c("Individual", "distance.to.climatic.centroid"))
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "FAGGRA" & focal.centroid$sum.BA > 20000),]
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "QUEALB"),]
clim.focal <- merge(focal.centroid, clim, by = "Individual")
clim.high <- rbind(clim.focal[clim.focal$sp == "FAGGRA",], clim.focal[clim.focal$sp == "HAMVIR",], clim.focal[clim.focal$sp == "CORALT",])
clim.low <- rbind(clim.focal[clim.focal$sp == "ACEPEN",], clim.focal[clim.focal$sp == "BETPAP",], clim.focal[clim.focal$sp == "SORAME",])
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr) # install.packages("plyr")
library(reshape) # install.packages("reshape")
library(sjPlot) # install.packages("sjPlot")
source("Fig2-source.R")
clim <- read.csv("climatic_data.csv")
clim <- subset(clim, select = c("Individual", "distance.to.climatic.centroid"))
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "FAGGRA" & focal.centroid$sum.BA > 20000),]
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "QUEALB"),]
clim.focal <- merge(focal.centroid, clim, by = "Individual")
ggplot(clim.focal,
aes(distance.to.climatic.centroid, relative.BA, color = sp)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~sp, ncol = 3, scales = "free") +
xlab("Distance from Climatic Centroid") +
ylab("Relative Basal Area")
lme1 <- lmer(relative.BA ~ distance.to.climatic.centroid + (distance.to.climatic.centroid | sp), data = clim.focal)
fixef(lme1)
ranef(lme1)
summary(lme1)
ranef <- ranef(lme1)
sjt.lmer(lme1)
clim <- read.csv("climatic_data.csv")
clim <- subset(clim, select = c("Individual", "distance.to.climatic.centroid"))
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "FAGGRA" & focal.centroid$sum.BA > 20000),]
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "QUEALB"),]
clim.focal <- merge(focal.centroid, clim, by = "Individual")
clim.high <- rbind(clim.focal[clim.focal$sp == "FAGGRA",], clim.focal[clim.focal$sp == "HAMVIR",], clim.focal[clim.focal$sp == "CORALT",])
clim.low <- rbind(clim.focal[clim.focal$sp == "ACEPEN",], clim.focal[clim.focal$sp == "BETPAP",], clim.focal[clim.focal$sp == "SORAME",])
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
clim.focal
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr) # install.packages("plyr")
library(reshape) # install.packages("reshape")
library(sjPlot) # install.packages("sjPlot")
source("Fig2-source.R")
clim <- read.csv("climatic_data.csv")
clim <- subset(clim, select = c("Individual", "distance.to.climatic.centroid"))
clim
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "FAGGRA" & focal.centroid$sum.BA > 20000),]
View(focal.centroid)
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "QUEALB"),]
clim.focal <- merge(focal.centroid, clim, by = "Individual")
View(clim.focal)
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr) # install.packages("plyr")
library(reshape) # install.packages("reshape")
library(sjPlot) # install.packages("sjPlot")
# detach("package:dplyr", unload=TRUE)
# load all data from source code
source("Fig2-source.R")
clim <- read.csv("climatic_data.csv")
clim <- subset(clim, select = c("Individual", "distance.to.climatic.centroid"))
# plot intraspecific competition
# ignore extra large DBH for FAGGUS value
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "FAGGRA" & focal.centroid$sum.BA > 20000),]
# ignore QUEALB for graphing purposes
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "QUEALB"),]
clim.focal <- merge(focal.centroid, clim, by = "Individual")
dim(clim.focal)
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
for (i in c(1:length(myspecieslist))){
subby <- subset(focal.centroid, sp==myspecieslist[i])
points(subby$minLatdiff, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
View(clim.focal)
myspecieslist <- unique(clim.focal$sp)
mycolors <- rep(c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#386CB0", "#F0027F"), 10) # need 6 really!
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
for (i in c(1:length(myspecieslist))){
subby <- subset(focal.centroid, sp==myspecieslist[i])
points(subby$minLatdiff, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
for (i in c(1:length(myspecieslist))){
subby <- subset(clim.focal, sp==myspecieslist[i])
points(subby$minLatdiff, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
View(focal.centroid)
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
# setwd("~/Documents/git/senior-moment/data") # For Dan
# set libraries
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr) # install.packages("plyr")
library(reshape) # install.packages("reshape")
library(sjPlot) # install.packages("sjPlot")
# detach("package:dplyr", unload=TRUE)
source("Fig2-source.R")
clim <- read.csv("climatic_data.csv")
clim <- subset(clim, select = c("Individual", "distance.to.climatic.centroid"))
# plot intraspecific competition
# ignore extra large DBH for FAGGUS value
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "FAGGRA" & focal.centroid$sum.BA > 20000),]
# ignore QUEALB for graphing purposes
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "QUEALB"),]
clim.focal <- merge(focal.centroid, clim, by = "Individual")
#ggplot(clim.focal,
myspecieslist <- unique(clim.focal$sp)
mycolors <- rep(c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#386CB0", "#F0027F"), 10) # need 6 really!
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
for (i in c(1:length(myspecieslist))){
subby <- subset(clim.focal, sp==myspecieslist[i])
points(subby$minLatdiff, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.129447941, -0.006064695, col="black", lwd=3) # overall mean
abline(-0.107918109, 0.0065249743, col="#1B9E77", lwd=2)
abline(0.381783875, -0.0230835213, col="#D95F02", lwd=2)
abline(-0.126421505,  0.0076437317, col="#7570B3", lwd=2)
abline(-0.017713339,  0.0010709888, col="#E7298A", lwd=2)
abline(0.005347238, -0.0003233062, col="#66A61E", lwd=2)
abline(-0.135078160,  0.0081671327, col="#E6AB02", lwd=2)
for (i in c(1:length(myspecieslist))){
subby <- subset(clim.focal, sp==myspecieslist[i])
points(subby$distance.to.climatic.centroid, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
myspecieslist <- unique(focal.centroid$sp)
mycolors <- rep(c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E", "#E6AB02"), 10) # need 6 really!
plot(focal.centroid$minLatdiff,focal.centroid$relative.BA, type="n")
for (i in c(1:length(myspecieslist))){
subby <- subset(focal.centroid, sp==myspecieslist[i])
points(subby$minLatdiff, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.129447941, -0.006064695, col="black", lwd=3) # overall mean
abline(-0.107918109, 0.0065249743, col="#7FC97F", lwd=1)
abline(0.381783875, -0.0230835213, col="#BEAED4", lwd=1)
abline(-0.126421505,  0.0076437317, col="#FDC086", lwd=1)
abline(-0.017713339,  0.0010709888, col="#FFFF99", lwd=1)
abline(0.005347238, -0.0003233062, col="#386CB0", lwd=1)
abline(-0.135078160,  0.0081671327, col="#F0027F", lwd=1)
myspecieslist <- unique(clim.focal$sp)
mycolors <- rep(c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#386CB0", "#F0027F"), 10) # need 6 really!
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
for (i in c(1:length(myspecieslist))){
subby <- subset(clim.focal, sp==myspecieslist[i])
points(subby$distance.to.climatic.centroid, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.129447941, -0.006064695, col="black", lwd=3) # overall mean
abline(-0.107918109, 0.0065249743, col="#1B9E77", lwd=2)
abline(0.381783875, -0.0230835213, col="#D95F02", lwd=2)
abline(-0.126421505,  0.0076437317, col="#7570B3", lwd=2)
abline(-0.017713339,  0.0010709888, col="#E7298A", lwd=2)
abline(0.005347238, -0.0003233062, col="#66A61E", lwd=2)
abline(-0.135078160,  0.0081671327, col="#E6AB02", lwd=2)
myspecieslist <- unique(clim.focal$sp)
mycolors <- rep(c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E", "#E6AB02"), 10) # need 6 really!
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
for (i in c(1:length(myspecieslist))){
subby <- subset(clim.focal, sp==myspecieslist[i])
points(subby$distance.to.climatic.centroid, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.129447941, -0.006064695, col="black", lwd=3) # overall mean
abline(-0.107918109, 0.0065249743, col="#1B9E77", lwd=2)
abline(0.381783875, -0.0230835213, col="#D95F02", lwd=2)
abline(-0.126421505,  0.0076437317, col="#7570B3", lwd=2)
abline(-0.017713339,  0.0010709888, col="#E7298A", lwd=2)
abline(0.005347238, -0.0003233062, col="#66A61E", lwd=2)
abline(-0.135078160,  0.0081671327, col="#E6AB02", lwd=2)
lme1 <- lmer(relative.BA ~ distance.to.climatic.centroid + (distance.to.climatic.centroid | sp), data = clim.focal)
fixef(lme1)
ranef(lme1)
?abline
fixef(lme1)
ranef(lme1)
myspecieslist <- unique(clim.focal$sp)
mycolors <- rep(c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E", "#E6AB02"), 10) # need 6 really!
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
for (i in c(1:length(myspecieslist))){
subby <- subset(clim.focal, sp==myspecieslist[i])
points(subby$distance.to.climatic.centroid, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.09936796, -0.01446959 , col="black", lwd=3) # overall mean
abline(-0.08582783, 0.019607063, col="#1B9E77", lwd=2)
abline(0.40367686, -0.092218542, lwd=2)
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
for (i in c(1:length(myspecieslist))){
subby <- subset(clim.focal, sp==myspecieslist[i])
points(subby$distance.to.climatic.centroid, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.09936796, -0.01446959 , col="black", lwd=3) # overall mean
abline(-0.08582783, 0.019607063, col="#1B9E77", lwd=2)
abline(0.40367686, -0.092218542, col="#D95F02", lwd=2)
abline(-0.11111040, 0.025382776, col="#7570B3", lwd=2)
abline(-0.06564860, 0.014997190, col="#E7298A", lwd=2)
abline(-0.04179071, 0.009546939, col="#66A61E", lwd=2)
abline(-0.09929931, 0.022684574, col="#E6AB02", lwd=2)
abline(-0.09929931, 0.022684574, col="#E6AB02", lwd=2)
?legend
legend('topright', names(myspecieslist)[-1] ,
lty=1, col=mycolors, bty='n', cex=.75)
?legend
legend('topright', myspecieslist,
lty=1, col=mycolors, bty='n', cex=.75)
legend('topright', myspecieslist,
lty=1, col=mycolors, bty='n', cex=1)
myspecieslist <- unique(clim.focal$sp)
mycolors <- rep(c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E", "#E6AB02"), 10) # need 6 really!
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
for (i in c(1:length(myspecieslist))){
subby <- subset(clim.focal, sp==myspecieslist[i])
points(subby$distance.to.climatic.centroid, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.09936796, -0.01446959 , col="black", lwd=3) # overall mean
abline(-0.08582783, 0.019607063, col="#1B9E77", lwd=2)
abline(0.40367686, -0.092218542, col="#D95F02", lwd=2)
abline(-0.11111040, 0.025382776, col="#7570B3", lwd=2)
abline(-0.06564860, 0.014997190, col="#E7298A", lwd=2)
abline(-0.04179071, 0.009546939, col="#66A61E", lwd=2)
abline(-0.09929931, 0.022684574, col="#E6AB02", lwd=2)
legend('topright', legend=c("Acer pensylvanicum", "B. papyrifera", "C. alternifolia", "F. grandifola", "H. virginiana", "S. americana"),
lty=1, col=mycolors, bty='n', cex=.75)
myspecieslist <- unique(clim.focal$sp)
mycolors <- rep(c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E", "#E6AB02"), 10) # need 6 really!
plot(clim.focal$distance.to.climatic.centroid, clim.focal$relative.BA, type="n", main="Competitiveness Index across Climatic Envelope", xlab="Distance to Climatic Centroid", ylab="Relative Basal Area")
for (i in c(1:length(myspecieslist))){
subby <- subset(clim.focal, sp==myspecieslist[i])
points(subby$distance.to.climatic.centroid, subby$relative.BA, col=mycolors[i], pch=16)
# pch is symbol shape
}
abline(0.09936796, -0.01446959 , col="black", lwd=3) # overall mean
abline(-0.08582783, 0.019607063, col="#1B9E77", lwd=2)
abline(0.40367686, -0.092218542, col="#D95F02", lwd=2)
abline(-0.11111040, 0.025382776, col="#7570B3", lwd=2)
abline(-0.06564860, 0.014997190, col="#E7298A", lwd=2)
abline(-0.04179071, 0.009546939, col="#66A61E", lwd=2)
abline(-0.09929931, 0.022684574, col="#E6AB02", lwd=2)
?legend
legend('topright', legend=c("A. pensylvanicum", "B. papyrifera", "C. alternifolia", "F. grandifola", "H. virginiana", "S. americana"),
lty=2, col=mycolors, bty='n', cex=.75)
lme1 <- lmer(relative.BA ~ distance.to.climatic.centroid + (distance.to.climatic.centroid | sp), data = clim.focal)
fixef(lme1)
ranef(lme1)
ranef <- ranef(lme1)
sjt.lmer(lme1)
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
library(sjPlot) # install.packages("sjPlot")
source("Fig2-source.R")
lme1 <- lmer(relative.BA ~ minLatdiff + (minLatdiff | sp), data = focal.centroid)
fixef(lme1)
ranef(lme1)
summary(lme1)
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr) # install.packages("plyr")
library(reshape) # install.packages("reshape")
library(sjPlot) # install.packages("sjPlot")
source("Fig2-source.R")
clim <- read.csv("climatic_data.csv")
clim <- subset(clim, select = c("Individual", "distance.to.climatic.centroid"))
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "FAGGRA" & focal.centroid$sum.BA > 20000),]
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "QUEALB"),]
clim.focal <- merge(focal.centroid, clim, by = "Individual")
lme1 <- lmer(relative.BA ~ distance.to.climatic.centroid + (distance.to.climatic.centroid | sp), data = clim.focal)
fixef(lme1)
ranef(lme1)
summary(lme1)
ranef <- ranef(lme1)
sjt.lmer(lme1)
rm(list = ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
# setwd("~/Documents/git/senior-moment/data") # For Dan
# set libraries
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
library(sjPlot) # install.packages("sjPlot")
# load all data from source code
source("Fig2-source.R")
ggplot(focal.centroid,
aes(minLatdiff, relative.BA, color = sp)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~sp, ncol = 3, scales = "free") +
xlab("Distance from Min. Latitude") +
ylab("Relative Basal Area")
ggplot(focal.centroid,
aes(minLatdiff, relative.BA, color = sp)) +
geom_point() +
geom_abline(0.129447941, -0.006064695, col="black", lwd=3) +
facet_wrap(~sp, ncol = 3, scales = "free") +
xlab("Distance from Min. Latitude") +
ylab("Relative Basal Area")
# model intraspecific competition
#summary(lm1 <- lm(relative.BA ~ minLatdiff, data = focal.centroid[focal.centroid$sp == "ACEPEN",]))
#summary(lm1 <- lm(relative.BA ~ minLatdiff, data = focal.centroid[focal.centroid$sp == "BETPAP",]))
#summary(lm1 <- lm(relative.BA ~ minLatdiff, data = focal.centroid[focal.centroid$sp == "CORALT",]))
#summary(lm1 <- lm(relative.BA ~ minLatdiff, data = focal.centroid[focal.centroid$sp == "FAGGRA",]))
#summary(lm1 <- lm(relative.BA ~ minLatdiff, data = focal.centroid[focal.centroid$sp == "HAMVIR",]))
#summary(lm1 <- lm(relative.BA ~ minLatdiff, data = focal.centroid[focal.centroid$sp == "SORAME",]))
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "QUEALB"),]
# ignore extra large DBH for FAGGUS value
focal.centroid <- focal.centroid[-which(focal.centroid$sp == "FAGGRA" & focal.centroid$sum.BA > 20000),]
# corrected HAMVIR 11 value to 8.1
focal.centroid[which(focal.centroid$sp == "HAMVIR" & focal.centroid$relative.BA > 10),]
# ignore extra large DBH for HAMVIR value
lme1 <- lmer(relative.BA ~ minLatdiff + (minLatdiff | sp), data = focal.centroid)
fixef(lme1)
ranef(lme1)
summary(lme1)
sjt.lmer(lme1)

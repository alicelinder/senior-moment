help('Map')
plot(test.result)
plot(test.result, xlab = index)
plot(test.result, xlab = "index")
help('ggplot')
help("ggplot")
help("gg")
REUdata <- read.csv("https://raw.githubusercontent.com/HarvardForest/Rworkshop/master/data/REUdata.csv")
View(REUdata)
REUdata <- read.csv('../data/REUdata.csv')
summary(REUdata)
summary(REUdata)
str(REUdata)
class(REUdata)
mode(REUdata)
table(REUdata[,'Programming.Experience'])
is.numeric(REUdata[,'Programming.Experience'])
name.1 <- substr(REUdata[,1],1,3)
table(name.1)
View(name.1)
table(REUdata$Pirates.or.Ninjas)
'p',NA,'p','n',NA,'n','n',NA)
pirates.or.ninjas <- c('p','n','p',NA,'p','n',
'n','p',NA,NA,NA,'p','p',NA,
'p',NA,'p','n',NA,'n','n',NA)
REUdata[14, ]
REUdata[14,"clean.Pirates.Ninjas"]
table(REUdata$clean.Pirates.Ninjas)
REUdata$Pirates.or.Ninjas
REUdata[14, ]
REUdata[14,"clean.Pirates.Ninjas"]
table(REUdata$clean.Pirates.Ninjas)
names(REUdata)
REUdata$Pirates.or.Ninjas
REUdata[14, ]
REUdata[14,"clean.Pirates.Ninjas"]
table(REUdata$clean.Pirates.Ninjas)
names(REUdata)
REUdata[,"clean.Pirates.Ninjas"] <- pirates.or.ninjas
names(REUdata)
REUdata$Pirates.or.Ninjas
REUdata[14, ]
REUdata[14,"clean.Pirates.Ninjas"]
table(REUdata$clean.Pirates.Ninjas)
REUdata[10, ]
REUdata[10,"clean.Pirates.Ninjas"]
REUdata$Pirates.or.Ninjas
REUdata[14, ]
REUdata[14,"clean.Pirates.Ninjas"]
REUdata[14,"clean.Pirates.Ninjas"] <- "n"
REUdata[10,"clean.Pirates.Ninjas"] <- "p"
REUdata[10, ]
REUdata[11,"clean.Pirates.Ninjas"] <- "p"
REUdata[19,"clean.Pirates.Ninjas"] <- "p"
REUdata[19,"clean.Pirates.Ninjas"] <- "p"
REUdata[22,"clean.Pirates.Ninjas"] <- "p"
REUdata[16,"clean.Pirates.Ninjas"] <- "n"
REUdata$clean.Pirates.Ninjas == "p"
table(REUdata$clean.Pirates.Ninjas)
plot(lm(REUdata$I.have.used.R ~ REUdata$Programming.Experience))
plot(REUdata$I.have.used.R ~ REUdata$Programming.Experience)
t.test(REUdata$I.have.used.R ~ REUdata$Programming.Experience)
t.test(REUdata$Programming.Experience ~ REUdata$I.have.used.R)
plot(REUdata$Programming.Experience ~ REUdata$I.have.used.R)
REUdata[!(REUdata[,"Pirates.or.Ninjas"] == "Pirates" |
REUdata[,"Pirates.or.Ninjas"] == "Ninjas"),"Pirates.or.Ninjas"] <- NA
## Visualize patterns
REUdata[,REUdata$Pirates.or.Ninjas] !== "Pirates" | REUdata[,REUdata$Pirates.or.Ninjas] !== "Ninjas"<- NA
REUdata[,REUdata$Pirates.or.Ninjas] != "Pirates" | REUdata[,REUdata$Pirates.or.Ninjas] != "Ninjas"<- NA
REUdata(![REUdata$Pirates.or.Ninjas] == "Pirates" | REUdata[,REUdata$Pirates.or.Ninjas] == "Ninjas"), REUdata$Pirates.or.Ninjas]<- NA
REUdata(![REUdata$Pirates.or.Ninjas == "Pirates" | REUdata[,REUdata$Pirates.or.Ninjas] == "Ninjas"), REUdata$Pirates.or.Ninjas]<- NA
REUdata(![REUdata$Pirates.or.Ninjas == "Pirates" | REUdata$Pirates.or.Ninjas == "Ninjas"), REUdata$Pirates.or.Ninjas]<- NA
REUdata!([REUdata$Pirates.or.Ninjas == "Pirates" | REUdata$Pirates.or.Ninjas == "Ninjas"), REUdata$Pirates.or.Ninjas]<- NA
REUdata!([REUdata$Pirates.or.Ninjas == "Pirates" | REUdata$Pirates.or.Ninjas == "Ninjas"), "Pirates.or.Ninjas"]<- NA
REUdata[!(REUdata$Pirates.or.Ninjas == "Pirates" | REUdata$Pirates.or.Ninjas == "Ninjas"), "Pirates.or.Ninjas"]<- NA
REUdata[!(REUdata[,"Pirates.or.Ninjas"] == "Pirates" | REUdata[,"Pirates.or.Ninjas"] == "Ninjas"), "Pirates.or.Ninjas"]<- NA
REUdata[!(REUdata[,"Pirates.or.Ninjas"] == "Pirates" | REUdata[,"Pirates.or.Ninjas"] == "Ninjas"),"Pirates.or.Ninjas"]<- NA
REUdata[!(REUdata[,"Pirates.or.Ninjas"] == "Pirates" | REUdata[,"Pirates.or.Ninjas"] == "Ninjas"),"Pirates.or.Ninjas"] <- NA
library(gdata)
d <- read.xls("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Dendrochronologie.xlsx")
install.packages("gdata")
library(gdata)
library(gdata)
install.packages("gdata")
d <- read.xls("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Dendrochronologie.xlsx")
install.packages("gdata")
d <- read.xls("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Dendrochronologie.xlsx")
library(gdata)
d <- read.xls("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Dendrochronologie.xlsx")
splist <- read.xls("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_arbres.xlsx")
splist <- read.xls("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_arbres.xlsx")
head(d)
names(d) <- c('no','Transect','sp','DBH','age')
names(splist) <- c('sp','Latin')
install.packages("spaa")
library(spaa)
splist <- read.xls("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_arbres.xlsx")
splist <- read.xls("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_arbres.xlsx")
head(d)
names(d) <- c('no','Transect','sp','DBH','age')
names(splist) <- c('sp','Latin')
d <- read.xls("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Dendrochronologie.csv")
install.packages("gdata")
install.packages("gdata")
library(gdata)
d <- read.xls("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Dendrochronologie.csv")
d <- read.csv("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Dendrochronologie.csv")
splist <- read.csv("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_arbres.csv")
head(d)
names(d) <- c('no','Transect','sp','DBH','age')
names(splist) <- c('sp','Latin')
library(ggplot2)
plot(age ~ DBH, data = d)
ggplot(d, aes(DBH, age, color = sp)) + geom_point()
(treesp <- sort(table(d$sp), decreasing=T))
(commonsp <- names(sort(table(d$sp), decreasing=T))[1:10])
treesp <- as.data.frame(treesp)
treesp$sp <- rownames(treesp)
treesp <- merge(splist, treesp)
treesp[order(treesp$treesp, decreasing=T),][1:10,]
d <- read.csv("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Herbacées.csv")
splist <- read.xls("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_herb.csv")
splist <- read.csv("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_herb.csv")
head(d)
names(d) <- c('no','Transect','sp','DBH','age')
names(splist) <- c('sp','Latin')
names(d) <- c('Transect','Code','recouv','herb')
names(splist) <- c('sp','Latin')
library(ggplot2)
(understorysp <- sort(table(d$sp), decreasing=T))
(commonundersp <- names(sort(table(d$sp), decreasing=T))[1:10])
d <- read.csv("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Herbacées.csv")
splist <- read.csv("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_herb.csv")
head(d)
names(d) <- c('Transect','Code','recouv','herb')
names(splist) <- c('sp','Latin')
library(ggplot2)
plot(age ~ DBH, data = d)
(understorysp <- sort(table(d$sp), decreasing=T))
(understorysp <- sort(table(d$Code), decreasing=T))
(commonundersp <- names(sort(table(d$Code), decreasing=T))[1:10])
(commonundersp <- names(sort(table(d$Code), decreasing=T))[1:15])
understorysp <- as.data.frame(understorysp)
understorysp$Code <- rownames(understorysp)
understorysp <- merge(splist, understorysp)
View(understorysp)
View(understorysp)
(understorysp <- sort(table(d$Code), decreasing=T))
(commonundersp <- names(sort(table(d$Code), decreasing=T))[1:15])
understorysp <- as.data.frame(understorysp)
understorysp$Code <- rownames(understorysp)
splist <- read.csv("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_herb.csv")
understorysp <- merge(splist, understorysp)
understorysp[order(understorysp$understorysp, decreasing=T),][1:10,]
understorysp[order(understorysp$understorysp, decreasing=T),][1:15,]
understorysp[order(understorysp$understorysp, decreasing=T),][1:20,]
View(treesp)
d <- read.csv("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/Dendrochronologie.csv")
splist <- read.csv("~/Dropbox/Summer 2016 Forest/Data/SH Vegetation Data/look_spp_arbres.csv")
head(d)
names(d) <- c('no','Transect','sp','DBH','age')
names(splist) <- c('sp','Latin')
library(ggplot2)
(treesp <- sort(table(d$sp), decreasing=T))
# Top 10 most common species
(commonsp <- names(sort(table(d$sp), decreasing=T))[1:10])
#
treesp <- as.data.frame(treesp)
treesp$sp <- rownames(treesp)
treesp <- merge(splist, treesp)
treesp[order(treesp$treesp, decreasing=T),][1:10,]
treesp[order(treesp$treesp, decreasing=T),][1:20,]
d <- read.csv("~/Dropbox/Summer 2016 Forest/Scripts/Sorame.csv")
head(d)
d <- d[!is.na(d$Latitude),]
library(maptools)
ds <- SpatialPointsDataFrame(d[,c("Longitude","Latitude")], d)
kmlPoints(ds, kmlfile = "SHind.kml", description = ds$Individual, name = ds$Individual)
write(dsk$content, file="WM.kml")
dsk <- kmlPoints(ds, kmlfile = "SHind.kml", description = ds$Individual, name = ds$Individual)
write(dsk$content, file="WM.kml")
rm(list=ls()) # remove everything currently held in the R memory
d <- read.csv("~/Dropbox/Summer 2016 Forest/Scripts/Sorame.csv")
head(d)
d <- d[!is.na(d$Latitude),]
library(maptools)
ds <- SpatialPointsDataFrame(d[,c("Longitude","Latitude")], d)
dsk <- kmlPoints(ds, kmlfile = "SHind.kml", description = ds$Individual, name = ds$Individual)
dsk <- kmlPoints(ds, kmlfile = "Sorame.kml", description = ds$Individual, name = ds$Individual)
write(dsk$content, file=".kml")
write(dsk$content, file="sorame.kml")
help("write")
kmlPoints(ds, kmlfile = "Sorame.kml", description = ds$Individual, name = ds$Individual)
write(ds$content, file="Sorame.kml")
sample(2:16, 2)
sample(2:16, 2, replace = FALSE)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by = "Individual")
focal <- focal[,-2:-3]
focal <- focal[, -4:-10]
focal <- rename(focal, c("Height.y" = "Height"))
head(focal)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
# filter  data so only individiuals with DBHs greater than the focal DBH exist
library(dplyr)
compet <- filter(all.dbh, DBH > fDBH)
# create basal area variables of only those individuals
compet["BA"] <- .5*pi*(compet$DBH)^2
compet["fBA"] <- .5*pi*(compet$fDBH)^2
# sum the basal area for each individual
focal["competing.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
focal["log.cBA"] <- log(focal$competing.BA)
focal$log.cBA <- as.integer(as.factor(as.character(focal$log.cBA)))
focal$competing.BA <- as.integer(as.factor(as.character(focal$competing.BA)))
class(focal$log.cBA)
# Site and species information based on last 2 letters of individuals
focal$Individual <- as.character(focal$Individual)
focal$Site <- unlist(
lapply(strsplit(focal[,1], "_"),
function(x) x[[2]]))
focal$sp <- substr(focal$Individual, 1, 6)
class(focal$Site)
class(focal)
class(focal$log.cBA)
# looking at data summaries, species at each site across gradient
#levels(focal$Site) <- c(3, 1, 4, 2)
#focal$Site <- factor(as.numeric(focal$Site), levels = c("HF", "WM", "GR", "SH"))
View(focal)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by = "Individual")
focal <- focal[,-2:-3]
focal <- focal[, -4:-10]
focal <- rename(focal, c("Height.y" = "Height"))
head(focal)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
# filter  data so only individiuals with DBHs greater than the focal DBH exist
library(dplyr)
compet <- filter(all.dbh, DBH > fDBH)
focal$sp <- substr(compet$Individual, 1, 6)
compet$sp <- substr(compet$Individual, 1, 6)
compet$Comp.Species == compet$sp
compet["intra.sp"] <- compet$Comp.Species == compet$sp
View(compet)
intra.compet <- filter(compet, compet$intra.sp == TRUE)
View(intra.compet)
intra.compet <- .5*pi*(intra.compet$DBH)^2
intra.compet <- .5*pi*(intra.compet$fDBH)^2
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by = "Individual")
focal <- focal[,-2:-3]
focal <- focal[, -4:-10]
focal <- rename(focal, c("Height.y" = "Height"))
head(focal)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
# filter  data so only individiuals with DBHs greater than the focal DBH exist
library(dplyr)
compet <- filter(all.dbh, DBH > fDBH)
# separate out same species to measure intra-specific competition
compet$sp <- substr(compet$Individual, 1, 6)
compet["intra.sp"] <- compet$Comp.Species == compet$sp
intra.compet <- filter(compet, compet$intra.sp == TRUE)
intra.compet["BA"] <- .5*pi*(intra.compet$DBH)^2
intra.compet["fBA"] <- .5*pi*(intra.compet$fDBH)^2
View(intra.compet)
intra.compet["competing.BA"] <- data.frame(tapply(intra.compet$BA, intra.compet$Individual, sum))
View(intra.compet)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by = "Individual")
focal <- focal[,-2:-3]
focal <- focal[, -4:-10]
focal <- rename(focal, c("Height.y" = "Height"))
head(focal)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
# filter  data so only individiuals with DBHs greater than the focal DBH exist
library(dplyr)
compet <- filter(all.dbh, DBH > fDBH)
# separate out same species to measure intra-specific competition
compet$sp <- substr(compet$Individual, 1, 6)
compet["intra.sp"] <- compet$Comp.Species == compet$sp
intra.compet <- filter(compet, compet$intra.sp == TRUE & compet$fDBH < compet$DBH)
View(intra.compet)
intra.compet["BA"] <- .5*pi*(intra.compet$DBH)^2
intra.compet["fBA"] <- .5*pi*(intra.compet$fDBH)^2
intra.compet["competing.BA"] <- data.frame(tapply(intra.compet$BA, intra.compet$Individual, sum))
intra.compet["competing.BA"] <- data.frame(tapply(intra.compet$BA, intra.compet$Individual, sum))
View(intra.compet)
focal["intra.comp.BA"] <- data.frame(tapply(intra.compet$BA, intra.compet$Individual, sum))
View(focal)
ggplot(focal,
aes(Lat, intra.comp.BA, color = sp)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~sp, ncol = 4)
View(focal)
ggplot(focal,
aes(Lat, intra.comp.BA, color = sp)) +
geom_point() +
geom_smooth(method="lm", se=F)
View(focal)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
#library(sjPlot) # install.packages("sjPlot")
detach("package:dplyr", unload=TRUE)
focal <- read.csv("focal.species.dbh.csv")
focal <- rename(focal, c("DBH" = "fDBH"))
lat.long <- read.csv("DBH.Lat.Long.csv")
focal <- merge(lat.long, focal, by = "Individual")
focal <- focal[,-2:-3]
focal <- focal[, -4:-10]
focal <- rename(focal, c("Height.y" = "Height"))
head(focal)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
# filter  data so only individiuals with DBHs greater than the focal DBH exist
library(dplyr)
compet <- filter(all.dbh, DBH > fDBH)
# separate out same species to measure intra-specific competition
compet$sp <- substr(compet$Individual, 1, 6)
compet["intra.sp"] <- compet$Comp.Species == compet$sp
intra.compet <- filter(compet, compet$intra.sp == TRUE & compet$fDBH < compet$DBH)
intra.compet["BA"] <- .5*pi*(intra.compet$DBH)^2
intra.compet["fBA"] <- .5*pi*(intra.compet$fDBH)^2
focal["intra.comp.BA"] <- data.frame(tapply(intra.compet$BA, intra.compet$Individual, sum))
# create basal area variables of only those individuals
compet["BA"] <- .5*pi*(compet$DBH)^2
compet["fBA"] <- .5*pi*(compet$fDBH)^2
# sum the basal area for each individual
focal["competing.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
focal["log.cBA"] <- log(focal$competing.BA)
focal$log.cBA <- as.integer(as.factor(as.character(focal$log.cBA)))
focal$competing.BA <- as.integer(as.factor(as.character(focal$competing.BA)))
class(focal$log.cBA)
# Site and species information based on last 2 letters of individuals
focal$Individual <- as.character(focal$Individual)
focal$Site <- unlist(
lapply(strsplit(focal[,1], "_"),
function(x) x[[2]]))
focal$sp <- substr(focal$Individual, 1, 6)
class(focal$Site)
class(focal)
class(focal$log.cBA)
# looking at data summaries, species at each site across gradient
#levels(focal$Site) <- c(3, 1, 4, 2)
#focal$Site <- factor(as.numeric(focal$Site), levels = c("HF", "WM", "GR", "SH"))
coralt <- focal[focal$sp == "CORALT",]
hamvir <- focal[focal$sp == "HAMVIR",]
sorame <- focal[focal$sp == "SORAME",]
acepen <- focal[focal$sp == "ACEPEN",]
focal.small <- rbind(coralt, sorame, hamvir, acepen)
#focal.medium <- rbind(hamvir, acepen)
betpap <- focal[focal$sp == "BETPAP",]
faggra <- focal[focal$sp == "FAGGRA",]
quealb <- focal[focal$sp == "QUEALB",]
focal.large <- rbind(betpap, faggra, quealb)
# plot intraspecific competition
ggplot(focal,
aes(Lat, intra.comp.BA, color = sp)) +
geom_point() +
geom_smooth(method="lm", se=F) +
facet_wrap(~sp, ncol = 4)
View(focal)
summary(lm1 <- lm(intra.comp.BA ~ Lat, data = focal[focal$sp == "ACEPEN",]))
summary(lm2 <- lm(intra.comp.BA ~ Lat, data = focal[focal$sp == "BETPAP",]))
lme1 <- lmer(intra.comp.BA ~ Lat + (Lat | sp), data = focal)

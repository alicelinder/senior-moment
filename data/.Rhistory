library(ggplot2)
(treesp <- sort(table(d$sp), decreasing=T))
# Top 10 most common species
(commonsp <- names(sort(table(d$sp), decreasing=T))[1:10])
#
treesp <- as.data.frame(treesp)
treesp$sp <- rownames(treesp)
treesp <- merge(splist, treesp)
treesp[order(treesp$treesp, decreasing=T),][1:10,]
treesp[order(treesp$treesp, decreasing=T),][1:20,]
d <- read.csv("~/Dropbox/Summer 2016 Forest/Scripts/Sorame.csv")
head(d)
d <- d[!is.na(d$Latitude),]
library(maptools)
ds <- SpatialPointsDataFrame(d[,c("Longitude","Latitude")], d)
kmlPoints(ds, kmlfile = "SHind.kml", description = ds$Individual, name = ds$Individual)
write(dsk$content, file="WM.kml")
dsk <- kmlPoints(ds, kmlfile = "SHind.kml", description = ds$Individual, name = ds$Individual)
write(dsk$content, file="WM.kml")
rm(list=ls()) # remove everything currently held in the R memory
d <- read.csv("~/Dropbox/Summer 2016 Forest/Scripts/Sorame.csv")
head(d)
d <- d[!is.na(d$Latitude),]
library(maptools)
ds <- SpatialPointsDataFrame(d[,c("Longitude","Latitude")], d)
dsk <- kmlPoints(ds, kmlfile = "SHind.kml", description = ds$Individual, name = ds$Individual)
dsk <- kmlPoints(ds, kmlfile = "Sorame.kml", description = ds$Individual, name = ds$Individual)
write(dsk$content, file=".kml")
write(dsk$content, file="sorame.kml")
help("write")
kmlPoints(ds, kmlfile = "Sorame.kml", description = ds$Individual, name = ds$Individual)
write(ds$content, file="Sorame.kml")
sample(2:16, 2)
sample(2:16, 2, replace = FALSE)
install.packages("sjPlot")
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(sp)
library(maptools)
library(raster)
library(rgeos)
library(sp)
library(rgdal)
tree.traits <- read.csv("tree-traits.csv")
tree.traits <- tree.traits[,-13:-17]
tree.traits <- tree.traits[,-14:-21]
tree.traits$Stem.density = tree.traits$Stem.mass/tree.traits$Stem.volume
tree.traits$SLA = tree.traits$Leaf.area / tree.traits$Dry.mass
tree.traits$c.n = tree.traits$X.C / tree.traits$X.N
zerofives <- tree.traits$DBH == 0.5 & !is.na(tree.traits$DBH)
tree.traits$DBH[zerofives] = 0.5 + runif(length(tree.traits$DBH[zerofives]), max = 0.01)
ones <- tree.traits$DBH == 1 & !is.na(tree.traits$DBH)
tree.traits$DBH[ones] = 1 + runif(length(tree.traits$DBH[ones]), max = 0.01)
tr <- c("SLA", "Stem.density", "DBH", "c.n")
ex <- ex[complete.cases(ex[,tr]),]
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(sp)
library(maptools)
library(raster)
library(rgeos)
library(sp)
library(rgdal)
library(geometry) # install.packages("vegan")
library(FD) # install.packages("FD")
library(plyr) # install.packages("plyr")
library(dplyr) # install.packages("dplyr")
library(reshape2) # install.packages("reshape2")
library(stringr) # install.packages("stringr")
tree.traits <- read.csv("tree-traits.csv")
tree.traits <- tree.traits[,-13:-17]
tree.traits <- tree.traits[,-14:-21]
tree.traits$Stem.density = tree.traits$Stem.mass/tree.traits$Stem.volume
tree.traits$SLA = tree.traits$Leaf.area / tree.traits$Dry.mass
tree.traits$c.n = tree.traits$X.C / tree.traits$X.N
zerofives <- tree.traits$DBH == 0.5 & !is.na(tree.traits$DBH)
tree.traits$DBH[zerofives] = 0.5 + runif(length(tree.traits$DBH[zerofives]), max = 0.01)
ones <- tree.traits$DBH == 1 & !is.na(tree.traits$DBH)
tree.traits$DBH[ones] = 1 + runif(length(tree.traits$DBH[ones]), max = 0.01)
View(tree.traits)
tr <- c("SLA", "Stem.density", "DBH", "c.n")
tree.traits[tr]
tr <- tree.traits[tr]
View(tr)
View(tree.traits)
tr <- c("Individual", "Species", "SLA", "Stem.density", "DBH", "c.n")
tr <- tree.traits[tr]
View(tr)
log.tr <- log(tr[, 3:6])
tr.species <- tr[, 2]
tr.pca <- prcomp(log.tr,
center = TRUE,
scale. = TRUE)
log.tr
View(tr)
complete.cases(tr)
tr[complete.cases(tr),]
tr <- tree.traits[tr]
ex <- tr[complete.cases(tr),]
View(ex)
log.tr <- log(tr[, 3:6])
tr.species <- tr[, 2]
tr.pca <- prcomp(log.tr,
center = TRUE,
scale. = TRUE)
log.tr
log.tr <- log(ex[, 3:6])
tr.species <- ex[, 2]
tr.pca <- prcomp(log.tr,
center = TRUE,
scale. = TRUE)
print(tr.pca)
summary(tr.pca)
tr.pca$rotation=-tr.pca$rotation
pca.axis1<- tr.pca$x[,1]
pca.axis2<- tr.pca$x[,2]
plot(pca.axis1,pca.axis2)
biplot(tr.pca)
target.spp<-c("Acer.pensylvanicum","Betula.papyrifera","Cornus.alternifolia"
,"Fagus.grandifolia","Hamamelis.virginiana","Sorbus.americana")
target.spp<-c("ACEPEN","BETPAP","CORALT"
,"FAGGRA","HAMVIR","SORAME")
ex
for
for(i in 1:6){
spsi<-target.spp[i]
print(spsi)
#coords.empirical.sub<-subset(coords.empirical,species==spsi)
#indices<-coords.empirical.sub$index.in.env.matrix
#climate.env.i<-IDs.env.matrix[,4:8]*distribution.matrix[,spsi]
#climate.env.i<-subset(climate.env.i,Avg_temper!=0)
log.tr.i <- log(ex[ex$Species == spsi, 3:6])
pca.spsi <- prcomp(log.tr.i,center = T,scale. = T)
pca.spsi$rotation=-pca.spsi$rotation
pca.spsi$x=-pca.spsi$x
pca.axis1<- pca.spsi$x[,1]
pca.axis2<- pca.spsi$x[,2]
#plot(pca.axis1,pca.axis2)
#environment.centroid<-c(mean(pca.axis1),mean(pca.axis2))
#climate.env.isub<-IDs.env.matrix[indices,4:8]
#predicted.spi<-predict(pca.spsi,newdata=climate.env.isub)[,1:2]
## saving
#climatic.envelope.each.sps[[i]]<-pca.spsi$x[,1:2]
#coords.empirical[which(coords.empirical$species==spsi),"distance.to.climatic.centroid"]<-dist.to.centroid
}
for(i in 1:6){
spsi<-target.spp[i]
print(spsi)
#coords.empirical.sub<-subset(coords.empirical,species==spsi)
#indices<-coords.empirical.sub$index.in.env.matrix
#climate.env.i<-IDs.env.matrix[,4:8]*distribution.matrix[,spsi]
#climate.env.i<-subset(climate.env.i,Avg_temper!=0)
log.tr.i <- log(ex[ex$Species == spsi, 3:6])
pca.spsi <- prcomp(log.tr.i,center = T,scale. = T)
pca.spsi$rotation=-pca.spsi$rotation
pca.spsi$x=-pca.spsi$x
pca.axis1<- pca.spsi$x[,1]
pca.axis2<- pca.spsi$x[,2]
#plot(pca.axis1,pca.axis2)
#environment.centroid<-c(mean(pca.axis1),mean(pca.axis2))
#climate.env.isub<-IDs.env.matrix[indices,4:8]
#predicted.spi<-predict(pca.spsi,newdata=climate.env.isub)[,1:2]
## saving
pca.each.sps[[i]]<-pca.spsi$x[,1:2]
#coords.empirical[which(coords.empirical$species==spsi),"distance.to.climatic.centroid"]<-dist.to.centroid
}
View(log.tr.i)
for(i in 1:6){
spsi<-target.spp[i]
print(spsi)
#coords.empirical.sub<-subset(coords.empirical,species==spsi)
#indices<-coords.empirical.sub$index.in.env.matrix
#climate.env.i<-IDs.env.matrix[,4:8]*distribution.matrix[,spsi]
#climate.env.i<-subset(climate.env.i,Avg_temper!=0)
log.tr.i <- log(ex[ex$Species == spsi, 3:6])
pca.spsi <- prcomp(log.tr.i,center = T,scale. = T)
pca.spsi$rotation=-pca.spsi$rotation
pca.spsi$x=-pca.spsi$x
pca.axis1<- pca.spsi$x[,1]
pca.axis2<- pca.spsi$x[,2]
#plot(pca.axis1,pca.axis2)
#environment.centroid<-c(mean(pca.axis1),mean(pca.axis2))
#climate.env.isub<-IDs.env.matrix[indices,4:8]
#predicted.spi<-predict(pca.spsi,newdata=climate.env.isub)[,1:2]
## saving
#pca.each.sps[[i]]<-pca.spsi$x[,1:2]
#coords.empirical[which(coords.empirical$species==spsi),"distance.to.climatic.centroid"]<-dist.to.centroid
}
View(log.tr.i)
View(log.tr.i)
for(i in 1:6){
spsi<-target.spp[i]
print(spsi)
#coords.empirical.sub<-subset(coords.empirical,species==spsi)
#indices<-coords.empirical.sub$index.in.env.matrix
#climate.env.i<-IDs.env.matrix[,4:8]*distribution.matrix[,spsi]
#climate.env.i<-subset(climate.env.i,Avg_temper!=0)
log.tr.i <- log(ex[ex$Species == spsi, 3:6])
pca.spsi <- prcomp(log.tr.i,center = T,scale. = T)
pca.spsi$rotation=-pca.spsi$rotation
pca.spsi$x=-pca.spsi$x
pca.axis1<- pca.spsi$x[,1]
pca.axis2<- pca.spsi$x[,2]
# TO DO: save
pca.sps[[i]] <- pca.spsi
#plot(pca.axis1,pca.axis2)
#environment.centroid<-c(mean(pca.axis1),mean(pca.axis2))
#climate.env.isub<-IDs.env.matrix[indices,4:8]
#predicted.spi<-predict(pca.spsi,newdata=climate.env.isub)[,1:2]
## saving
#pca.each.sps[[i]]<-pca.spsi$x[,1:2]
#coords.empirical[which(coords.empirical$species==spsi),"distance.to.climatic.centroid"]<-dist.to.centroid
}
pca.sps <- vector()
pca.sps <- pca.spsi
for(i in 1:6){
spsi<-target.spp[i]
print(spsi)
#coords.empirical.sub<-subset(coords.empirical,species==spsi)
#indices<-coords.empirical.sub$index.in.env.matrix
#climate.env.i<-IDs.env.matrix[,4:8]*distribution.matrix[,spsi]
#climate.env.i<-subset(climate.env.i,Avg_temper!=0)
log.tr.i <- log(ex[ex$Species == spsi, 3:6])
pca.spsi <- prcomp(log.tr.i,center = T,scale. = T)
pca.spsi$rotation=-pca.spsi$rotation
pca.spsi$x=-pca.spsi$x
pca.axis1<- pca.spsi$x[,1]
pca.axis2<- pca.spsi$x[,2]
# TO DO: save
pca.sps <- pca.spsi
#plot(pca.axis1,pca.axis2)
#environment.centroid<-c(mean(pca.axis1),mean(pca.axis2))
#climate.env.isub<-IDs.env.matrix[indices,4:8]
#predicted.spi<-predict(pca.spsi,newdata=climate.env.isub)[,1:2]
## saving
#pca.each.sps[[i]]<-pca.spsi$x[,1:2]
#coords.empirical[which(coords.empirical$species==spsi),"distance.to.climatic.centroid"]<-dist.to.centroid
}
pca.sps <- pca.spsi
pca.sps
for(i in 1:6){
spsi<-target.spp[i]
print(spsi)
#coords.empirical.sub<-subset(coords.empirical,species==spsi)
#indices<-coords.empirical.sub$index.in.env.matrix
#climate.env.i<-IDs.env.matrix[,4:8]*distribution.matrix[,spsi]
#climate.env.i<-subset(climate.env.i,Avg_temper!=0)
log.tr.i <- log(ex[ex$Species == spsi, 3:6])
pca.spsi <- prcomp(log.tr.i,center = T,scale. = T)
pca.spsi$rotation=-pca.spsi$rotation
pca.spsi$x=-pca.spsi$x
pca.axis1<- pca.spsi$x[,1]
pca.axis2<- pca.spsi$x[,2]
# TO DO: save
pca.sps[[i]] <- pca.spsi
#plot(pca.axis1,pca.axis2)
#environment.centroid<-c(mean(pca.axis1),mean(pca.axis2))
#climate.env.isub<-IDs.env.matrix[indices,4:8]
#predicted.spi<-predict(pca.spsi,newdata=climate.env.isub)[,1:2]
## saving
#pca.each.sps[[i]]<-pca.spsi$x[,1:2]
#coords.empirical[which(coords.empirical$species==spsi),"distance.to.climatic.centroid"]<-dist.to.centroid
}
pca.sps
View(pca.sps)
log.tr.acepen <- log(ex[ex$Species == "ACEPEN", 3:6])
log.tr <- log(ex[ex$Species == "ACEPEN", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.spsi$rotation=-pca.spsi$rotation
pca.spsi$x=-pca.spsi$x
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
summary(pca.sps)
biplot(pca.sps)
pca.axis2<
pca.axis2
pca.axis1
log.tr <- log(ex[ex$Species == "ACEPEN", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
pca.axis2
log.tr <- log(ex[ex$Species == "ACEPEN", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "BETPAP", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "BETPAP", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "CORALT", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "FAGGRA", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "HAMVIR", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "SORAME", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
plot(pca.axis1,pca.axis2)
biplot(pca.sps)
tree.traits <- read.csv("tree-traits.csv")
tree.traits <- tree.traits[,-13:-17]
tree.traits <- tree.traits[,-14:-21]
tree.traits$Stem.density = tree.traits$Stem.mass/tree.traits$Stem.volume
tree.traits$SLA = tree.traits$Leaf.area / tree.traits$Dry.mass
tree.traits$c.n = tree.traits$X.C / tree.traits$X.N
zerofives <- tree.traits$DBH == 0.5 & !is.na(tree.traits$DBH)
tree.traits$DBH[zerofives] = 0.5 + runif(length(tree.traits$DBH[zerofives]), max = 0.01)
head(tree.traits)
tr <- c("Individual", "Species", "SLA", "Stem.density", "DBH", "X.N", "X.C")
tr <- c("Individual", "Species", "SLA", "Stem.density", "DBH", "X.N", "X.C")
tr <- tree.traits[tr]
ex <- tr[complete.cases(tr),]
log.tr <- log(ex[, 3:6])
tr.species <- ex[, 2]
tr.pca <- prcomp(log.tr,
center = TRUE,
scale. = TRUE)
biplot(tr.pca)
biplot(tr.pca)
log.tr <- log(ex[, 3:7])
tr.species <- ex[, 2]
tr.pca <- prcomp(log.tr,
center = TRUE,
scale. = TRUE)
biplot(tr.pca)
print(tr.pca)
summary(tr.pca)
tr.pca$rotation=-tr.pca$rotation
tr.pca$x=-tr.pca$x
pca.axis1<- tr.pca$x[,1]
pca.axis2<- tr.pca$x[,2]
environment.centroid<-c(mean(pca.axis1),mean(pca.axis2))
target.spp<-c("ACEPEN","BETPAP","CORALT"
,"FAGGRA","HAMVIR","SORAME")
pca.sps <- vector()
for(i in 1:6){
spsi<-target.spp[i]
print(spsi)
log.tr.i <- log(ex[ex$Species == spsi, 3:6])
pca.spsi <- prcomp(log.tr.i,center = T,scale. = T)
pca.spsi$rotation=-pca.spsi$rotation
pca.spsi$x=-pca.spsi$x
pca.axis1<- pca.spsi$x[,1]
pca.axis2<- pca.spsi$x[,2]
# TO DO: save
pca.sps[[i]] <- pca.spsi
}
for(i in 1:6){
spsi<-target.spp[i]
print(spsi)
log.tr.i <- log(ex[ex$Species == spsi, 3:7])
pca.spsi <- prcomp(log.tr.i,center = T,scale. = T)
pca.spsi$rotation=-pca.spsi$rotation
pca.spsi$x=-pca.spsi$x
pca.axis1<- pca.spsi$x[,1]
pca.axis2<- pca.spsi$x[,2]
# TO DO: save
pca.sps[[i]] <- pca.spsi
}
log.tr <- log(ex[ex$Species == "ACEPEN", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
log.tr <- log(ex[ex$Species == "ACEPEN", 3:7])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "BETPAP", 3:6])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
log.tr <- log(ex[ex$Species == "BETPAP", 3:7])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "CORALT", 3:6])
log.tr <- log(ex[ex$Species == "CORALT", 3:7])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/senior-moment/data")
library(geometry) # install.packages("vegan")
library(FD) # install.packages("FD")
library(plyr) # install.packages("plyr")
library(dplyr) # install.packages("dplyr")
library(reshape2) # install.packages("reshape2")
library(stringr) # install.packages("stringr")
tree.traits <- read.csv("tree-traits.csv")
tree.traits <- tree.traits[,-13:-17]
tree.traits <- tree.traits[,-14:-21]
tree.traits$Stem.density = tree.traits$Stem.mass/tree.traits$Stem.volume
tree.traits$SLA = tree.traits$Leaf.area / tree.traits$Dry.mass
tree.traits$c.n = tree.traits$X.C / tree.traits$X.N
head(tree.traits)
tr <- c("Individual", "Species","Leaf.area", "Dry.mass", "Stem.density", "DBH", "X.N", "X.C")
tr <- c("Individual", "Species","Leaf.area", "Dry.mass", "Stem.density", "DBH", "X.N", "X.C")
tr <- tree.traits[tr]
ex <- tr[complete.cases(tr),]
log.tr <- log(ex[, 3:8])
tr.species <- ex[, 2]
tr.pca <- prcomp(log.tr,
center = TRUE,
scale. = TRUE)
tr.pca <- prcomp(log.tr,
center = TRUE,
scale. = TRUE)
biplot(tr.pca)
print(tr.pca)
summary(tr.pca)
tr.pca$rotation=-tr.pca$rotation
tr.pca$x=-tr.pca$x
pca.axis1<- tr.pca$x[,1]
pca.axis2<- tr.pca$x[,2]
plot(pca.axis1,pca.axis2)
log.tr <- log(ex[ex$Species == "ACEPEN", 3:8])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "BETPAP", 3:8])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "CORALT", 3:8])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "FAGGRA", 3:8])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)
biplot(pca.sps)
pca.axis1<- pca.sps$x[,1]
pca.axis2<- pca.sps$x[,2]
log.tr <- log(ex[ex$Species == "HAMVIR", 3:8])
pca.sps <- prcomp(log.tr,center = T,scale. = T)
pca.sps$rotation=-pca.sps$rotation
pca.sps$x=-pca.sps$x
summary(pca.sps)

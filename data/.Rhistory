all.dbh["greater"] <- NA
for (i in all.dbh$index){
if (all.dbh$fDBH > all.dbh$DBH){
all.dbh$greater <- FALSE
}
}
View(all.dbh)
# finding DBHs larger than focal DBH
all.dbh["greater"] <- NA
for (i in all.dbh$index){
if (all.dbh$fDBH > all.dbh$DBH){
all.dbh$greater <- 0
}
}
warnings()
all.dbh["greater"] <- NA
for (i in all.dbh$index){
if (all.dbh$fDBH[i] > all.dbh$DBH[i]){
all.dbh$greater <- 0
}
}
all.dbh["greater"] <- NA
for (i in all.dbh$index){
if (all.dbh$fDBH[i] > all.dbh$DBH[i]){
all.dbh$greater <- 0
}
else {
all.dbh$greater <- 1
}
}
all.dbh["greater"] <- NA
for (i in all.dbh$index){
if (all.dbh$fDBH[i] > all.dbh$DBH[i]){
all.dbh$greater <- 0
}
else {
all.dbh$greater[i] <- 1
}
}
all.dbh["greater"] <- NA
for (i in all.dbh$index){
if (all.dbh$fDBH[i,] > all.dbh$DBH[i,]){
all.dbh$greater <- 0
}
else {
all.dbh$greater[i,] <- 1
}
}
all.dbh["greater"] <- NA
for (i in all.dbh$index){
if (all.dbh$fDBH[i, 8] > all.dbh$DBH[i, 8]){
all.dbh$greater <- 0
}
else {
all.dbh$greater[i, 8] <- 1
}
}
print(i)
}
for( i in all.dbh$index){
print(i)
}
for (i in all.dbh$Individual){
print(i)
}
for (i in all.dbh$Individual){
if (fDBH > DBH){
all.dbh$greater <- 0
}
else {
all.dbh$greater[i, 8] <- 1
}
}
for (i in all.dbh$Individual){
if (all.dbh$fDBH > all.dbh$DBH){
all.dbh$greater <- 0
}
else {
all.dbh$greater[i, 8] <- 1
}
}
for (i in all.dbh$Individual){
if (all.dbh$fDBH > all.dbh$DBH){
all.dbh$greater[i, all.dbh$greater] <- 0
}
else {
all.dbh$greater[i, all.dbh$greater] <- 1
}
}
all.dbh$fDBH > all.dbh$DBH
all.dbh$fDBH < all.dbh$DBH
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh)
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$DBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
View(all.dbh)
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh)
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$DBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
View(all.dbh)
# finding DBHs larger than focal DBH
all.dbh$fDBH < all.dbh$DBH
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh)
head(all.dbh)
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
View(all.dbh)
# finding DBHs larger than focal DBH
all.dbh$fDBH < all.dbh$DBH
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
(notinfocal <- all.dbh$Individual[!all.dbh$Individual %in% focal.dbh$Individual])
(notinother <- all.dbh$Individual[!all.dbh$Individual %in% other.dbh$Individual])
View(all.dbh)
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
all.dbh <- merge(focal.dbh, other.dbh)
View(all.dbh)
?merge
all.dbh <- merge(focal.dbh, other.dbh, by.x = focal.dbh$Individual)
all.dbh <- merge(focal.dbh, other.dbh, by.x = focal.dbh$Index)
all.dbh <- merge(focal.dbh, other.dbh)
(notinall <- other.dbh$index[!other.dbh$index %in% all.dbh$index])
View(other.dbh)
max(all.dbh$index)
## example of using 'incomparables'
x <- data.frame(k1 = c(NA,NA,3,4,5), k2 = c(1,NA,NA,4,5), data = 1:5)
y <- data.frame(k1 = c(NA,2,NA,4,5), k2 = c(NA,NA,3,4,5), data = 1:5)
merge(x, y, by = c("k1","k2")) # NA's match
View(x)
View(y)
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh, by = "Individual")
head(all.dbh)
max(all.dbh$index)
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
View(all.dbh)
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh$["BA"] <- .5*pi*(all.dbh$DBH)^2
all.dbh["BA"] <- .5*pi*(all.dbh$DBH)^2
View(all.dbh)
all.dbh["fBA"] <- .5*pi*(all.dbh$fDBH)^2
data.frame(tapply(all.dbh$BA[all.dbh$greater == TRUE], all.dbh$Individual, sum))
?tapply
data.frame(tapply(all.dbh$BA[all.dbh$greater == TRUE,], all.dbh$Individual, sum))
data.frame(tapply(all.dbh$BA[,all.dbh$greater == TRUE], all.dbh$Individual, sum))
data.frame(tapply(all.dbh$BA, all.dbh$Individual, sum))
1 <- all.dbh$greater[all.dbh$greater == TRUE,]
1 <- all.dbh$greater[all.dbh$greater = TRUE,]
1 <- all.dbh$greater[,all.dbh$greater == TRUE]
"1" <- all.dbh$greater[,all.dbh$greater == TRUE]
lsdkfjd <- all.dbh$greater[,all.dbh$greater == TRUE]
all.dbh$greater[,all.dbh$greater == TRUE] <- 1
all.dbh$greater[,all.dbh$greater == TRUE]
all.dbh$greater
all.dbh$greater == TRUE
all.dbh$greater == TRUE <- 1
all.dbh$greater[,,]
all.dbh$greater[,all.dbh$greater]
as.data.frame(all.dbh)
View(all.dbh)
all.dbh$greater[,all.dbh$greater]
all.dbh$greater[all.dbh$greater,]
all.dbh <- as.data.frame(all.dbh)
View(all.dbh)
all.dbh$greater == TRUE
all.dbh$greater[all.dbh$greater == TRUE,]
all.dbh$greater[,all.dbh$greater == TRUE]
for (i in all.dbh$greater){
if (all.dbh$greater == TRUE){
all.dbh$greater <- 1
}
else{
all.dbh$greater <- 1
}
}
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
View(all.dbh)
for (i in all.dbh$greater){
if (all.dbh$greater == TRUE){
all.dbh$greater <- 1
}
else{
all.dbh$greater <- 0
}
}
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
View(all.dbh)
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
for (i in all.dbh$greater){
if (all.dbh$greater == "TRUE"){
all.dbh$greater <- 1
}
else{
all.dbh$greater <- 0
}
}
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
for (i in all.dbh$greater){
if (all.dbh$greater = TRUE){
all.dbh$greater <- 1
}
else{
all.dbh$greater <- 0
}
}
filter(all.dbh, DBH > fDBH)
library(dplyr)
filter(all.dbh, DBH > fDBH)
compet <- filter(all.dbh, DBH > fDBH)
compet["BA"] <- .5*pi*(compet$DBH)^2
compet["fBA"] <- .5*pi*(compet$fDBH)^2
levels(compet$Individual)
n <- levels(compet$Individual)
compet["comp.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
data.frame(tapply(compet$BA, compet$Individual, sum))
competing.BA <- data.frame(tapply(compet$BA, compet$Individual, sum))
head(compet)
merge(focal.dbh, competing.BA, by = "Individual")
merge(focal.dbh, competing.BA, by = "BA")
competing.BA <_ merge(focal.dbh, competing.BA, by = "Individual")
competing.BA <- merge(focal.dbh, competing.BA, by = "Individual")
View(competing.BA)
competing.BA <- data.frame(tapply(compet$BA, compet$Individual, sum, rownames = FALSE))
View(competing.BA)
competing.BA <- data.frame(tapply(compet$BA, compet$Individual, sum, colnames = FALSE))
competing.BA <- tapply(compet$BA, compet$Individual, sum)
View(competing.BA)
focal.dbh["competing.BA"] <- merge(focal.dbh, competing.BA, by = "Individual")
focal.dbh["competing.BA"] <- data.fram(tapply(compet$BA, compet$Individual, sum))
focal.dbh["competing.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
View(focal.dbh)
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
library(dplyr)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
all.dbh$DBH <- as.numeric(as.character(all.dbh$DBH))
all.dbh$fDBH <- as.numeric(as.character(all.dbh$fDBH))# convert from factor to numeric
summary(all.dbh$DBH) # should not be any NA
#View(all.dbh)
# say whether focal DBH is smaller than competing individual
all.dbh$greater <- all.dbh$fDBH < all.dbh$DBH
all.dbh <- as.data.frame(all.dbh)
#View(all.dbh)
# filter  data so only individiuals with DBHs greater than the focal DBH exist
compet <- filter(all.dbh, DBH > fDBH)
# create basal area variables of only those individuals
compet["BA"] <- .5*pi*(compet$DBH)^2
compet["fBA"] <- .5*pi*(compet$fDBH)^2
# sum the basal area for each individual
focal.dbh["competing.BA"] <- data.frame(tapply(compet$BA, compet$Individual, sum))
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
library(dplyr)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
head(focal.dbh)
other.dbh <- read.csv("all.species.dbh.csv")
other.dbh["index"] <- 1:3893
head(other.dbh)
# merge datasets
all.dbh <- merge(focal.dbh, other.dbh, by = "Individual")
head(all.dbh)
# Clean up DBH measures
all.dbh$DBH <- as.character(all.dbh$DBH) # convert from factor to character
all.dbh$fDBH <- as.character(all.dbh$fDBH)
all.dbh$DBH[all.dbh$DBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$fDBH[all.dbh$fDBH == "less.than.1"] = 0.5 # make all less.than.1 into .5
all.dbh$DBH[all.dbh$DBH == "less.than.2"] = 1 # make all <2 measures into 1
rm(list = ls())
setwd("~/GitHub/senior-moment/data") # setwd("~/Dropbox/Work/Harvard/Summer 2016 Forest/Data")
library(vegan) # install.packages("vegan")
library(lme4)# install.packages("lme4")
library(scales)# install.packages("scales")
library(ggplot2) # install.packages("ggplot2")
library(plyr)
library(reshape)
library(dplyr)
# library(sjPlot) # install.packages("sjPlot")
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
?rename
require(dplyr)
focal.dbh <- read.csv("focal.species.dbh.csv")
focal.dbh <- rename(focal.dbh, c("DBH" = "fDBH"))
View(focal.dbh)
??rename
focal.dbh <- rename(focal.dbh, DBH = fDBH))
focal.dbh <- rename(focal.dbh, DBH = fDBH)
focal.dbh <- rename(focal.dbh, DBH = "fDBH")
focal.dbh <- rename(focal.dbh, "DBH" = "fDBH")
focal.dbh <- rename(focal.dbh, "DBH" = "fDBH")

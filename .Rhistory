x <- 1
rm(x)
is.integer(x)
x<- 1
is.integer(x)
x<- 1L
is.integer(x)
is.numeric(x)
class(2.8)
class(x)
class(3L)
class(3L*3)
x <- factor("hello")
class(x)
x <- "hello"
class(x)
nchar(x)
x <- factor("hello")
nchar(x)
vector <- c("Alice", "Ben", "Margaret")
View(vector)
sldkfj
x <- 1:10
y <- 10:20
x +y
x <- 1:10
y <- 11:20
x +y
x <- 1:3
names(x) <- c("A", "B", "C")
x
? 'help'
? 'names'
? 'apropos'
apropos(mean)
apropos("mean")
? 'mean.POSIXlt'
x <- 10:1
y <- -4:5
q <- c("Hockey", "Football", "Baseball", "Curling")
q
? 'vector'
? 'c"
$list
list
theURL <- "http://www.jaredlander.com/data/Tomato%20First.csv"
tomato <- read.table(file=theURL, header = TRUE, sep = ",")
head(tomato)
require(ggplot2)
data(diamonds)
head(diamonds)
plot(price ~ carat, data = diamonds)
ggplot(data = diamonds) + geom_histogram(aes(x = carat))
ggplot(data = diamonds) + geom_histogram(aes(x = carat), fill = "grey50")
g <- ggplot(diamonds, aes(x = carat, y = price))
g+geom_point(aes(color=color))
g_color <- g+geom_point(aes(color=color))
g_color +facet_wrap(~color)
g_color +facet_grid(cut~clarity)
g_color + geom_histogram() + facet_grid(cut~clarity)
g_color + geom_histogram + facet_wrap(~color)
g_color + geom_histogram() + facet_wrap(~color)
ggplot(diamonds, aes (x=carat))
ggplot(diamonds, aes (x=carat)) + geom_histogram() + facet_wrap(~color)
? 'aes'
require(ggthemes)
apropos(download)
apropos("download")
download.packages(ggthemes)
download.packages("ggthemes")
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("lme4", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
download.packages(ggthemes, http://github.com/jrnold/ggthemes)
download.packages(ggthemes, http://github.com/jrnold/ggthemes)
download.packages(ggthemes, github.com/jrnold/ggthemes)
download.packages(ggthemes, desdir = "http://github.com/jrnold/ggthemes")
download.packages(ggthemes, destdir = "http://github.com/jrnold/ggthemes")
download.packages(ggthemes, repos = getOption("http://github.com/jrnold/ggthemes")
download.packages(ggthemes, repos = getOption("http://github.com/jrnold/ggthemes"))
install.packages("ggthemes")
install.packages("ggthemes")
install.packages("ggthemes")
library("ggthemes", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
require(ggthemes)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
d <- read.csv("all.species.dbh.csv", row.names = NULL)
d <- d[,1:3]
d <- read.csv("all.species.dbh.csv", row.names = NULL)
View(d)
d <- d[,1:3]
View(d)
d <- d2[,-2]
overstory <- distinct(d)
library(vegan)
library(ggplot2)
library(lme4)
library(dplyr)
library(tidyr)
overstory <- distinct(d)
overstory <- rename(overstory, Species = Comp.Species)
d <- melt(overstory, id = "Individual", measure.vars = "Species" )
d <- melt(overstory, id = "Individual", measure.vars = "Species" )
? 'melt;
? 'melt'
??melt
library(reshape)
install.packages("reshape")
library(reshape)
d <- melt(overstory, id = "Individual", measure.vars = "Species" )
over.all <- as.data.frame(acast(d2, Individual ~ value, length))
??acast
? 'acast'
library(vegan)
library(ggplot2)
library(lme4)
library(dplyr)
library(tidyr)
library(reshape)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
d <- read.csv("all.species.dbh.csv", row.names = NULL)
d <- d[,1:3]
d <- d2[,-2]
overstory <- distinct(d)
overstory <- rename(overstory, Species = Comp.Species)
View(overstory)
View("overstory")
View(overstory)
rename(overstory, Species = Comp.Species)
?'rename'
library(plyr)
rename(overstory, Species = Comp.Species)
library(vegan)
library(ggplot2)
library(lme4)
library(dplyr)
library(tidyr)
library(reshape)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
d <- read.csv("all.species.dbh.csv", row.names = NULL)
d <- d[,1:3]
d <- d2[,-2]
overstory <- distinct(d)
rename(overstory, Species = Comp.Species)
View(overstory)
library(plyr)
rename(overstory, "Species" = "Comp.Species")
rename(overstory, c("Species" = "Comp.Species")
)
rename(overstory, c("Comp.Species" = "Species"))
View(overstory)
overstory <- rename(overstory, c("Comp.Species" = "Species"))
View(overstory)
names(overstory)
d <- melt(overstory, id = "Individual", measure.vars = "Species" )
?'melt;
?'melt'
View(d)
View(overstory)
over.all <- as.data.frame(acast(d2, Individual ~ value, length))
d <- melt(overstory, id = "Individual", measure.vars = "Species" )
over.all <- as.data.frame(acast(d2, Individual ~ value, length))
library(reshape2)
over.all <- as.data.frame(acast(d2, Individual ~ value, length))
over.all <- as.data.frame(acast(d, Individual ~ value, length))
head(over.all)
over.all <- t(over.all)
head(over.all)
summary(over.all)
richness <- apply(over.all, 2, sum)
mds1 <- metaMDS(t(over.all), try = 100) # use t() to change it so that the communities are rows, and species are columns, which is the format that vegan uses
plot(mds1) # ok, lots of scatter, good ordination
overcomp <- data.frame(mds1$points)
overcomp$s <- richness # add our species richness calculations to this data frame
overcomp$sp <- substr(rownames(overcomp), 1, 6)
overcomp$site <- unlist(
lapply(strsplit(rownames(overcomp), "_"),
function(x) x[[2]]))
plot(mds1, type = "n",
xlim = c(-2, 2),
ylim = c(-1.2, 2)
)
overcomp$site <- unlist(
lapply(strsplit(rownames(overcomp), "_"),
function(x) x[[2]]))
overcomp$site <- as.factor(overcomp$site)
levels(overcomp$site) <- c(3, 1, 4, 2)
overcomp$site <- factor(as.numeric(as.character(overcomp$site)), labels = c("HF", "WM", "GR", "SH"))
ggplot(overcomp,
aes(as.numeric(site), s, color = sp)) +
geom_smooth(method = "lm", se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
scale_x_continuous(labels =
c("HF","WM","GR","SH")) +
facet_wrap(~sp, ncol = 4)
ggplot(overcomp,
aes(as.numeric(site), MDS1, color = sp)) +
geom_smooth(method = "lm", se = F, aes(color = sp)) +
geom_point()  + xlab("Site") +
scale_x_continuous(labels =
c("HF","WM","GR","SH")) +
facet_wrap(~sp, ncol = 4)
colz = alpha(c("darkred", "ivory", "darkgreen", "cornflowerblue"), 0.5)
plot(mds1, type = "n",
xlim = c(-2, 2),
ylim = c(-1.2, 2)
)
count = 1
for(i in unique(overcomp$site)){
ordihull(mds1, group = overcomp$site, label =F,
draw = "polygon", col = colz[count],
show.groups = i)
count = count + 1
}
legend("topleft",
fill = colz,
legend = c("Harvard Forest", "White Mountains", "Grant", "St. Hippolyte"),
bty = "n")
title("Overstory")
library(vegan)
library(ggplot2)
library(lme4)
library(dplyr)
library(tidyr)
library(reshape)
library(plyr)
library(reshape2)
rm(list = ls())
setwd("~/GitHub/senior-moment/data")
d <- read.csv("all.species.dbh.csv", row.names = NULL)
d <- d[,1:3]
overstory <- distinct(d)
overstory <- rename(overstory, c("Comp.Species" = "Species"))
names(overstory)
d <- melt(overstory, id = "Individual", measure.vars = "Species" )
over.all <- as.data.frame(acast(d, Individual ~ value, length))
head(over.all)
over.all <- t(over.all)
head(over.all)
summary(over.all)
richness <- apply(over.all, 2, sum)
mds1 <- metaMDS(t(over.all), try = 100) # use t() to change it so that the communities are rows, and species are columns, which is the format that vegan uses
plot(mds1) # ok, lots of scatter, good ordination
overcomp <- data.frame(mds1$points)
overcomp$s <- richness # add our species richness calculations to this data frame
overcomp$sp <- substr(rownames(overcomp), 1, 6)
overcomp$site <- unlist(
lapply(strsplit(rownames(overcomp), "_"),
function(x) x[[2]]))
overcomp$site <- as.factor(overcomp$site)
levels(overcomp$site) <- c(3, 1, 4, 2)
overcomp$site <- factor(as.numeric(as.character(overcomp$site)), labels = c("HF", "WM", "GR", "SH"))
colz = alpha(c("darkred", "ivory", "darkgreen", "cornflowerblue"), 0.5)
plot(mds1, type = "n",
xlim = c(-2, 2),
ylim = c(-1.2, 2)
)
count = 1
for(i in unique(overcomp$site)){
ordihull(mds1, group = overcomp$site, label =F,
draw = "polygon", col = colz[count],
show.groups = i)
count = count + 1
}
colz = alpha(c("7570B3", "ivory", "darkgreen", "cornflowerblue"), 0.5)
colz = alpha(c("#7570B3", "ivory", "darkgreen", "cornflowerblue"), 0.5)
plot(mds1, type = "n",
xlim = c(-2, 2),
ylim = c(-1.2, 2)
)
count = 1
for(i in unique(overcomp$site)){
ordihull(mds1, group = overcomp$site, label = F,
draw = "polygon", col = colz[count],
show.groups = i)
count = count + 1
}
colz = alpha(c("#7570B3", "#1B9E77", "darkgreen", "cornflowerblue"), 0.5)
plot(mds1, type = "n",
xlim = c(-2, 2),
ylim = c(-1.2, 2)
)
count = 1
for(i in unique(overcomp$site)){
ordihull(mds1, group = overcomp$site, label = F,
draw = "polygon", col = colz[count],
show.groups = i)
count = count + 1
}
colz = alpha(c("#7570B3", "#1B9E77", "#D95F02", "cornflowerblue"), 0.5)
plot(mds1, type = "n",
xlim = c(-2, 2),
ylim = c(-1.2, 2)
)
count = 1
for(i in unique(overcomp$site)){
ordihull(mds1, group = overcomp$site, label = F,
draw = "polygon", col = colz[count],
show.groups = i)
count = count + 1
}
colz = alpha(c("#7570B3", "#1B9E77", "#D95F02", "#E7298A"), 0.5)
plot(mds1, type = "n",
xlim = c(-2, 2),
ylim = c(-1.2, 2)
)
count = 1
for(i in unique(overcomp$site)){
ordihull(mds1, group = overcomp$site, label = F,
draw = "polygon", col = colz[count],
show.groups = i)
count = count + 1
}
colz = alpha(c("#E7298A", "#1B9E77", "#D95F02", "#7570B3"), 0.5)
plot(mds1, type = "n",
xlim = c(-2, 2),
ylim = c(-1.2, 2)
)
count = 1
for(i in unique(overcomp$site)){
ordihull(mds1, group = overcomp$site, label = F,
draw = "polygon", col = colz[count],
show.groups = i)
count = count + 1
}
legend("topleft",
fill = colz,
legend = c("Harvard Forest", "White Mountains", "Grant", "St. Hippolyte"),
bty = "n"
cex = .75)
legend("topleft",
fill = colz,
legend = c("Harvard Forest", "White Mountains", "Grant", "St. Hippolyte"),
bty = "n"
cex = .75)
legend("topleft",
fill = colz,
legend = c("Harvard Forest", "White Mountains", "Grant", "St. Hippolyte"),
bty = "n",
cex = .75)
title("Overstory")
title("Overstory", cex = 150)
legend("topleft",
fill = colz,
legend = c("Harvard Forest", "White Mountains", "Grant", "St. Hippolyte"),
bty = "n",
cex = .75)
title("Overstory", cex = 150)
install.packages("rticles", type = "source")
